{"version":3,"sources":["webpack:///../clientapp/$_lazy_route_resource lazy namespace object","webpack:///../clientapp/app/app.component.html","webpack:///../clientapp/app/app.component.ts","webpack:///../clientapp/app/app.module.ts","webpack:///../clientapp/components/attendance/Attendance.ts","webpack:///../clientapp/components/attendance/attendance.html","webpack:///../clientapp/components/contact/Contact.ts","webpack:///../clientapp/components/contact/contact.html","webpack:///../clientapp/components/home/Home.ts","webpack:///../clientapp/components/home/home.html","webpack:///../clientapp/environments/environment.ts","webpack:///../clientapp/main.ts","webpack:///../clientapp/routes.ts","webpack:///../clientapp/services/AuthService.ts","webpack:///../clientapp/services/LoggerService.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","import { Component,OnInit } from '@angular/core';\nimport {AuthService} from '../services/AuthService';\n\n\n@Component({\n  selector: 'ctsApp',\n  templateUrl: 'app.component.html'\n})\nexport class AppComponent  implements OnInit {\n  pageTitle = 'Home Page';\n\n  token: string;\n  userName : string;\n  email: string;\n  \n  isLogonSuccessful : boolean\n\n  constructor(private _authService: AuthService)\n  {\n  \r\n  }\n\n  ngOnInit(){\n\n\tvar tokenElement = document.getElementById(\"hdnToken\");\r\n\tif ( tokenElement != null){\r\n\t\tthis.token = tokenElement.innerText;\r\n\t}\r\n\r\n\tvar emailElement = document.getElementById(\"hdnEmail\");\r\n\tif ( emailElement != null){\r\n\t\tthis.email = emailElement.innerText;\r\n\t}\r\n\r\n\tvar userNameElement = document.getElementById(\"hdnUserName\");\r\n\tif ( userNameElement != null){\r\n\t\tthis.userName = userNameElement.innerText;\r\n\t}\r\n\r\n\tvar loginLinkElement = document.getElementById(\"loginLink\");\r\n\tvar logoutLinkElement = document.getElementById(\"logoutLink\");\r\n\tvar loggedinElement = document.getElementById(\"loggedInAs\");\r\n\r\n\tif ( this.token == null ){\r\n\t\tconsole.log('token is null, getting from localStorage');\r\n\t\tthis.token = localStorage.getItem('token');\r\n\t\tthis.userName = localStorage.getItem('userName');\r\n\t\tthis.email = localStorage.getItem('email');\r\n\r\n\t\tif ( this.token != null ){\r\n\t\tconsole.log('localStorage is NOT null');\r\n\t\t\tif ( loggedinElement != null){\r\n\t\t\t\tloggedinElement.innerText = this.email;\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif ( loginLinkElement != null){\r\n\t\t\t\tloginLinkElement.style.display = \"none\";\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif ( logoutLinkElement != null){\r\n\t\t\t\tlogoutLinkElement.style.display = \"block\";\r\n\t\t\t}\r\n\r\n\t\t\tthis.isLogonSuccessful = true;\r\n\r\n\t\t\tthis._authService.setAuthToken(this.token);\r\n\t\t\tthis._authService.setEmail(this.email);\r\n\t\t\tthis._authService.setUserName(this.userName);\r\n\t\t\tthis._authService.setIsLoggedOn(true);\r\n\t\t}\r\n\t\telse {\r\n\t\tconsole.log('localStorage is null');\r\n\t\t\tthis.isLogonSuccessful = false;\r\n\t\t\tthis._authService.setAuthToken('');\r\n\t\t\tthis._authService.setEmail('');\r\n\t\t\tthis._authService.setUserName('');\r\n\t\t\tthis._authService.setIsLoggedOn(false);\r\n\t\t}\r\n\r\n\t}\r\n\telse {\r\n\t\tconsole.log('token is NOT null, setting into localStorage');\r\n\r\n\t\tlocalStorage.setItem('token', this.token);\r\n\t\tlocalStorage.setItem('userName', this.userName);\r\n\t\tlocalStorage.setItem('email', this.email);\r\n\r\n\t\tif ( loggedinElement != null){\r\n\t\t\tloggedinElement.innerText = this.email;\r\n\t\t}\r\n\t\t\r\n\t\tif ( loginLinkElement != null){\r\n\t\t\tloginLinkElement.style.display = \"none\";\r\n\t\t}\r\n\t\t\r\n\t\tif ( logoutLinkElement != null){\r\n\t\t\tlogoutLinkElement.style.display = \"block\";\r\n\t\t}\r\n\r\n\t\tthis.isLogonSuccessful = true;\r\n\t\tthis._authService.setAuthToken(this.token);\r\n\t\tthis._authService.setEmail(this.email);\r\n\t\tthis._authService.setUserName(this.userName);\r\n\t\tthis._authService.setIsLoggedOn(true);\r\n\t}\r\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {RouterModule} from '@angular/Router';\n\nimport {LoggerService} from '../services/LoggerService';\nimport {AuthService} from '../services/AuthService';\nimport { AppComponent } from './app.component';\nimport {AppRoutingModule} from '../routes';\nimport {HomeComponent} from '../components/home/Home';\nimport {ContactComponent} from '../components/contact/Contact'\nimport {AttendanceComponent} from '../components/attendance/Attendance';\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n\tHomeComponent,\n\tAttendanceComponent,\n\tContactComponent\n  ],\n  imports: [\n    BrowserModule,\n\tAppRoutingModule\n  ],\n  providers: [AuthService, LoggerService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","﻿import {Component, OnInit} from '@angular/core'\r\nimport {AuthService} from '../../services/AuthService';\r\n\r\n@Component ({\r\n\ttemplateUrl : './attendance.html'\r\n})\r\nexport class AttendanceComponent  implements OnInit {\r\n\r\n\tpageTitle = \"Attendance\";\r\n\tuserName = '';\r\n\tisLoggedOn : boolean;\r\n\r\n\tconstructor(private _authService: AuthService){\n\t}\r\n\r\n\tngOnInit(){\r\n\t\tthis.isLoggedOn = this._authService.getIsLoggedOn();\r\n\t\tif ( this.isLoggedOn == false){\r\n\t\t\twindow.location.href = \"/logon/login\";\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.userName = this._authService.getUserName();\r\n\t}\r\n\r\n }\r\n","module.exports = \"<header class=\\\"container-fluid p0\\\">\\r\\n    <nav class=\\\"navbar navbar-light navbar-expand-md bgcolorMenu\\\">\\r\\n        <div class=\\\"row \\\">\\r\\n            <button class=\\\"navbar-toggler\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#menuBar\\\">\\r\\n                <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n            </button>\\r\\n            <div id=\\\"menuBar\\\" class=\\\"navbar-collapse collapse\\\">\\r\\n                <ul class=\\\"navbar-nav\\\">\\r\\n                    <li class=\\\"nav-item\\\"><a class=\\\"nav-link py-0\\\" routerLink=\\\"/home\\\">Home</a></li>\\r\\n                    <li *ngIf=\\\"isLoggedOn\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link py-0\\\" routerLink=\\\"/attendance\\\">Attendance</a></li>\\r\\n                    <li class=\\\"nav-item\\\"><a class=\\\"nav-link py-0\\\" routerLink=\\\"/contactus\\\">Contact Us</a></li>\\r\\n                    <li class=\\\"nav-item\\\"><a class=\\\"nav-link py-0\\\">About Us</a></li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n    </nav>\\r\\n</header>\\r\\n<div class=\\\"container-fluid p0\\\">\\r\\n    <h4 class=\\\"text-center\\\">{{pageTitle}}</h4>\\r\\n    <h3 *ngIf=\\\"isLoggedOn\\\">Welcome {{userName}}</h3>\\r\\n</div>\"","﻿import {Component, OnInit} from '@angular/core'\r\n\r\nimport {AuthService} from '../../services/AuthService';\r\n\r\n@Component ({\r\n\ttemplateUrl : './contact.html'\r\n})\r\nexport class ContactComponent implements OnInit {\r\n\r\n\tpageTitle = \"Contact Us\";\r\n\tuserName = '';\r\n\tisLoggedOn : boolean;\r\n\r\n\tconstructor(private _authService: AuthService){\n\t}\r\n\r\n\tngOnInit(){\r\n\t\tthis.isLoggedOn = this._authService.getIsLoggedOn();\r\n\t\tthis.userName = this._authService.getUserName();\r\n\t}\r\n}","module.exports = \"<header class=\\\"container-fluid p0\\\">\\r\\n    <nav class=\\\"navbar navbar-light navbar-expand-md bgcolorMenu\\\">\\r\\n        <div class=\\\"row \\\">\\r\\n            <button class=\\\"navbar-toggler\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#menuBar\\\">\\r\\n                <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n            </button>\\r\\n            <div id=\\\"menuBar\\\" class=\\\"navbar-collapse collapse\\\">\\r\\n                <ul class=\\\"navbar-nav\\\">\\r\\n                    <li class=\\\"nav-item\\\"><a class=\\\"nav-link py-0\\\" routerLink=\\\"/home\\\">Home</a></li>\\r\\n                    <li *ngIf=\\\"isLoggedOn\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link py-0\\\" routerLink=\\\"/attendance\\\">Attendance</a></li>\\r\\n                    <li class=\\\"nav-item\\\"><a class=\\\"nav-link py-0\\\" routerLink=\\\"/contactus\\\">Contact Us</a></li>\\r\\n                    <li class=\\\"nav-item\\\"><a class=\\\"nav-link py-0\\\">About Us</a></li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n    </nav>\\r\\n</header>\\r\\n<div class=\\\"container-fluid p0\\\">\\r\\n    <h4 class=\\\"text-center\\\">{{pageTitle}}</h4>\\r\\n    <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n        <div class=\\\"card card-body bg-light\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"UserName\\\">Name:</label>\\r\\n                <input id=\\\"UserName\\\" name=\\\"UserName\\\" type=\\\"text\\\" class=\\\"form-control\\\" />\\r\\n                <span id=\\\"errorUserName\\\" class=\\\"text-danger\\\"></span>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"UserEmail\\\">Email:</label>\\r\\n                <input id=\\\"UserEmail\\\" name=\\\"UserEmail\\\" type=\\\"email\\\" class=\\\"form-control\\\" />\\r\\n                <span id=\\\"errorUserEmail\\\" class=\\\"text-danger\\\"></span>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"Subject\\\">Phone:</label>\\r\\n                <input id=\\\"Phone\\\" name=\\\"Phone\\\" type=\\\"text\\\" class=\\\"form-control\\\" />\\r\\n                <span id=\\\"Phone\\\" class=\\\"text-danger\\\"></span>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"Subject\\\">Subject:</label>\\r\\n                <input id=\\\"Subject\\\" name=\\\"Subject\\\" type=\\\"text\\\" class=\\\"form-control\\\" />\\r\\n                <span id=\\\"Subject\\\" class=\\\"text-danger\\\"></span>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"Message\\\">Message:</label>\\r\\n                <textarea id=\\\"Message\\\" name=\\\"Message\\\" class=\\\"form-control\\\"></textarea>\\r\\n                <span id=\\\"Message\\\" class=\\\"text-danger\\\"></span>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\"><i class=\\\"fa fa-envelope\\\"> </i> Send Message</button>\\r\\n                <div class=\\\"text-success\\\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","﻿import { Component,OnInit } from '@angular/core';\nimport {AuthService} from '../../services/AuthService';\n\n@Component({\n  templateUrl: './home.html'\n})\nexport class HomeComponent  implements OnInit {\n  pageTitle = 'Home Page';\n  userName = '';\n\n  isLoggedOn : boolean;\n  \n\n  constructor(private _authService: AuthService){\n  }\n\n  ngOnInit(){\n\n\tthis.isLoggedOn = this._authService.getIsLoggedOn();\n\tthis.userName = this._authService.getUserName();\n  }\n}\n","module.exports = \"<header class=\\\"container-fluid p0\\\">\\r\\n    <nav class=\\\"navbar navbar-light navbar-expand-md bgcolorMenu\\\">\\r\\n        <div class=\\\"row \\\">\\r\\n            <button class=\\\"navbar-toggler\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#menuBar\\\">\\r\\n                <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n            </button>\\r\\n            <div id=\\\"menuBar\\\" class=\\\"navbar-collapse collapse\\\">\\r\\n                <ul class=\\\"navbar-nav\\\">\\r\\n                    <li class=\\\"nav-item\\\"><a class=\\\"nav-link py-0\\\" routerLink=\\\"/home\\\">Home</a></li>\\r\\n                    <li *ngIf=\\\"isLoggedOn\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link py-0\\\" routerLink=\\\"/attendance\\\">Attendance</a></li>\\r\\n                    <li class=\\\"nav-item\\\"><a class=\\\"nav-link py-0\\\" routerLink=\\\"/contactus\\\">Contact Us</a></li>\\r\\n                    <li class=\\\"nav-item\\\"><a class=\\\"nav-link py-0\\\">About Us</a></li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n    </nav>\\r\\n</header>\\r\\n<div class=\\\"container-fluid p0\\\">\\r\\n    <h2 class=\\\"text-center\\\">{{pageTitle}}</h2>\\r\\n    <h3 *ngIf=\\\"isLoggedOn\\\">Welcome {{userName}}</h3>\\r\\n</div>\\r\\n\"","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n","﻿import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\n\r\nimport {HomeComponent} from './components/home/Home';\r\nimport {AttendanceComponent} from './components/attendance/Attendance';\r\nimport {ContactComponent} from './components/contact/Contact';\r\n\r\nexport const AppRoutes = [\r\n\t{ path : \"\", redirectTo : 'home', pathMatch : 'full'},\r\n\t{ path : \"attendance\",component: AttendanceComponent},\r\n\t{ path : \"home\", component: HomeComponent},\r\n\t{ path : \"contactus\", component: ContactComponent}\r\n]\r\n\r\n@NgModule ({\r\n\timports : [RouterModule.forRoot(AppRoutes, {useHash : true, enableTracing : false })],\r\n\texports : [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule {\r\n\r\n}","﻿import {Injectable, OnInit} from '@angular/core';\r\nimport {Http, Response } from '@angular/http';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\tstatic instance : AuthService;\r\n\tauthToken : string;\r\n\temail : string;\r\n\tuserName :string;\r\n\tisLoggedOn : boolean;\r\n\r\n\tconstructor(){\r\n\t\tif ( AuthService.instance == null){\r\n\t\t\tAuthService.instance = this;\r\n\t\t}\r\n\t\treturn AuthService.instance;\r\n\t}\r\n\r\n\tsetAuthToken(token : string){\r\n\t\tthis.authToken = token;\r\n\t}\r\n\r\n\tgetAuthToken()\r\n\t{\r\n\t\treturn this.authToken;\r\n\t}\r\n\r\n\tsetEmail(email : string){\r\n\t\tthis.email = email;\r\n\t}\r\n\r\n\tgetEmail()\r\n\t{\r\n\t\treturn this.email;\r\n\t}\r\n\r\n\tsetUserName(userName : string){\r\n\t\tthis.userName = userName;\r\n\t}\r\n\r\n\tgetUserName()\r\n\t{\r\n\t\treturn this.userName;\r\n\t}\r\n\r\n\tsetIsLoggedOn(isLoggedOn : boolean){\r\n\t\tthis.isLoggedOn = isLoggedOn;\r\n\t}\r\n\r\n\tgetIsLoggedOn()\r\n\t{\r\n\t\treturn this.isLoggedOn;\r\n\t}\r\n\r\n}","﻿import {Injectable} from '@angular/core';\r\nimport {environment} from '../environments/environment';\r\n\r\n@Injectable()\r\nexport class LoggerService {\r\n\tstatic instance : LoggerService;\r\n\r\n\tconstructor (){\r\n\t\tif ( LoggerService.instance == null ){\r\n\t\t\tLoggerService.instance = this;\r\n\t\t}\r\n\t\treturn LoggerService.instance;\r\n\t}\r\n\r\n\tlogMessage(message : string){\r\n\t\tif ( ! environment.production){\r\n\t\t\tconsole.log(message);\r\n\t\t}\r\n\t}\r\n}\r\n"],"sourceRoot":""}