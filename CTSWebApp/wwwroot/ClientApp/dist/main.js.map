{"version":3,"sources":["webpack:///../clientapp/$_lazy_route_resource lazy namespace object","webpack:///../clientapp/app/app.component.html","webpack:///../clientapp/app/app.component.ts","webpack:///../clientapp/app/app.module.ts","webpack:///../clientapp/components/accessDenied/accessDenied.html","webpack:///../clientapp/components/accessDenied/accessDenied.ts","webpack:///../clientapp/components/attendance/Attendance.ts","webpack:///../clientapp/components/attendance/attendance.html","webpack:///../clientapp/components/contact/Contact.ts","webpack:///../clientapp/components/contact/contact.html","webpack:///../clientapp/components/home/Home.ts","webpack:///../clientapp/components/home/home.html","webpack:///../clientapp/components/loggedOut/loggedOut.html","webpack:///../clientapp/components/loggedOut/loggedOut.ts","webpack:///../clientapp/components/score/Scores.ts","webpack:///../clientapp/components/score/scores.html","webpack:///../clientapp/environments/environment.ts","webpack:///../clientapp/interceps/AuthInterceptor.ts","webpack:///../clientapp/main.ts","webpack:///../clientapp/model/Grade.ts","webpack:///../clientapp/routes.ts","webpack:///../clientapp/services/AuthService.ts","webpack:///../clientapp/services/CalendarService.ts","webpack:///../clientapp/services/GradeService.ts","webpack:///../clientapp/services/LoggerService.ts","webpack:///../clientapp/services/StudentService.ts","webpack:///../clientapp/services/TeacherService.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","module.exports = \"<router-outlet></router-outlet>\\r\\n\"","import { Component,OnInit } from '@angular/core';\r\nimport {AuthService} from '../services/AuthService';\r\nimport {LoggerService} from '../services/LoggerService';\r\n\r\n\r\n@Component({\r\n  selector: 'ctsApp',\r\n  templateUrl: 'app.component.html'\r\n})\r\nexport class AppComponent  implements OnInit {\r\n  pageTitle = 'Home Page';\r\n\r\n  token: string;\r\n  userName : string;\r\n  email: string;\r\n    expiresBy: Date;\r\n  \r\n  isLogonSuccessful : boolean\r\n\r\n  constructor(private _authService: AuthService, \r\n\tprivate _loggerService: LoggerService){\r\n  \r\n  }\r\n\r\n  ngOnInit(){\r\n\r\n\tvar tokenElement = document.getElementById(\"hdnToken\");\r\n\tif ( tokenElement != null){\r\n\t\tthis.token = tokenElement.innerText;\r\n\t}\r\n\r\n\tvar emailElement = document.getElementById(\"hdnEmail\");\r\n\tif ( emailElement != null){\r\n\t\tthis.email = emailElement.innerText;\r\n\t}\r\n\r\n\tvar userNameElement = document.getElementById(\"hdnUserName\");\r\n\tif ( userNameElement != null){\r\n\t\tthis.userName = userNameElement.innerText;\r\n\t}\r\n\r\n\tvar expiresByElement = document.getElementById(\"hdnExpires\");\r\n\tif ( expiresByElement != null){\r\n\t    this.expiresBy = new Date(expiresByElement.innerText);\r\n    }\r\n\r\n\r\n\tvar loginLinkElement = document.getElementById(\"loginLink\");\r\n\tvar logoutLinkElement = document.getElementById(\"logoutLink\");\r\n\tvar loggedinElement = document.getElementById(\"loggedInAs\");\r\n\r\n\tif ( this.token == null ){\r\n\t\tthis._loggerService.log('Getting from localStorage');\r\n\t\tthis.token = localStorage.getItem('token');\r\n\t\tthis.userName = localStorage.getItem('userName');\r\n\t\tthis.email = localStorage.getItem('email');\r\n        let temp = localStorage.getItem('expiresBy');\r\n\t\tif ( temp != null){\r\n\t\t\tthis.expiresBy = new Date(temp);\r\n        }\r\n\r\n\t\tif ( this.token != null ){\r\n\t\t\tif ( loggedinElement != null){\r\n\t\t\t\tloggedinElement.innerText = this.email;\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif ( loginLinkElement != null){\r\n\t\t\t\tloginLinkElement.style.display = \"none\";\r\n\t\t\t}\r\n\t\t\r\n\t\t\tif ( logoutLinkElement != null){\r\n\t\t\t\tlogoutLinkElement.style.display = \"block\";\r\n\t\t\t}\r\n\r\n\t\t\tthis.isLogonSuccessful = true;\r\n\r\n\t\t\tthis._authService.setAuthToken(this.token);\r\n\t\t\tthis._authService.setEmail(this.email);\r\n\t\t\tthis._authService.setUserName(this.userName);\r\n            this._authService.setExpiresBy(this.expiresBy);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tthis._loggerService.log('localStorage is null');\r\n\t\t\tthis.isLogonSuccessful = false;\r\n\t\t\tthis._authService.setAuthToken('');\r\n\t\t\tthis._authService.setEmail('');\r\n\t\t\tthis._authService.setUserName('');\r\n            this._authService.setExpiresBy(null);\r\n\t\t}\r\n\r\n\t}\r\n\telse {\r\n\t\tthis._loggerService.log('Setting localStorage');\r\n\r\n\t\tlocalStorage.setItem('token', this.token);\r\n\t\tlocalStorage.setItem('userName', this.userName);\r\n\t\tlocalStorage.setItem('email', this.email);\r\n\t\tlocalStorage.setItem('expiresBy', this.expiresBy.toLocaleString());\r\n\r\n\t\tif ( loggedinElement != null){\r\n\t\t\tloggedinElement.innerText = this.email;\r\n\t\t}\r\n\t\t\r\n\t\tif ( loginLinkElement != null){\r\n\t\t\tloginLinkElement.style.display = \"none\";\r\n\t\t}\r\n\t\t\r\n\t\tif ( logoutLinkElement != null){\r\n\t\t\tlogoutLinkElement.style.display = \"block\";\r\n\t\t}\r\n\r\n\t\tthis.isLogonSuccessful = true;\r\n\t\tthis._authService.setAuthToken(this.token);\r\n\t\tthis._authService.setEmail(this.email);\r\n\t\tthis._authService.setUserName(this.userName);\r\n        this._authService.setExpiresBy(this.expiresBy);\r\n      }\r\n\r\n      if (this._authService.getIsLoggedOn() == true) {\r\n          this._authService.getAuthFunctions()\r\n              .subscribe(result => {\r\n                  this._authService.authFunctions = result;\r\n              },\r\n                  err => {\r\n                      this._loggerService.log(\"Error occurred : Code=\" + err.status + \",Error=\" + err.statusText);\r\n                  });\r\n      }\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/Router';\r\nimport { HttpModule } from '@angular/http';\r\nimport { HttpClientModule,HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { LoggerService } from '../services/LoggerService';\r\nimport { AuthInterceptor } from '../interceps/AuthInterceptor';\r\nimport { AuthService } from '../services/AuthService';\r\nimport { CalendarService } from '../services/CalendarService';\r\nimport { GradeService } from '../services/GradeService';\r\nimport { TeacherService } from '../services/TeacherService';\r\nimport { StudentService } from '../services/StudentService';\r\n\r\n\r\nimport { AppComponent } from './app.component';\r\nimport {AppRoutingModule} from '../routes';\r\nimport {HomeComponent} from '../components/home/Home';\r\nimport {ContactComponent} from '../components/contact/Contact'\r\nimport {AttendanceComponent} from '../components/attendance/Attendance';\r\nimport { ScoresComponent } from '../components/score/Scores';\r\nimport { LoggedOutComponent } from '../components/loggedOut/loggedOut';\r\nimport { AccessDeniedComponent } from '../components/accessDenied/accessDenied';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n\tHomeComponent,\r\n\tAttendanceComponent,\r\n      ContactComponent,\r\n      ScoresComponent,\r\n      LoggedOutComponent,\r\n      AccessDeniedComponent\r\n  ],\r\n  imports: [\r\n      BrowserModule,\r\n      HttpModule,\r\n      HttpClientModule,\r\n\t  FormsModule, \r\n\t  ReactiveFormsModule,\r\n\t  AppRoutingModule\r\n  ],\r\n    providers: [AuthService, LoggerService, CalendarService, GradeService, TeacherService, StudentService,\r\n\t\t{provide: HTTP_INTERCEPTORS, useClass:AuthInterceptor, multi:true}\r\n\t],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"jumbotron\\\">\\r\\n        <h2 style=\\\"color:darkred\\\">Sorry ! Access Denied for this Page. </h2>\\r\\n        <div>\\r\\n            Please contact system administrator to gain access. Click <button id=\\\"btnCancel\\\" type=\\\"reset\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"homeClick()\\\"><i class=\\\"fa fa-home\\\" aria-hidden=\\\"true\\\"></i> here</button> to navigate to Home Page !\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","﻿import { Component, OnInit, PACKAGE_ROOT_URL } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/AuthService';\r\nimport { LoggerService } from '../../services/LoggerService';\r\n\r\n@Component({\r\n    templateUrl: './accessDenied.html'\r\n})\r\nexport class AccessDeniedComponent implements OnInit {\r\n    constructor(private _router: Router) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    homeClick() {\r\n        this._router.navigate([\"home\"]);\r\n    }\r\n}","﻿import { Component, OnInit } from '@angular/core'\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/AuthService';\r\nimport { CalendarService } from '../../services/CalendarService';\r\nimport { CalendarWeek } from '../../model/CalendarWeek';\r\nimport { Observable } from 'rxjs';\r\nimport { GradeService } from '../../services/GradeService';\r\nimport { Grade } from '../../model/Grade';\r\nimport { TeacherService } from '../../services/TeacherService';\r\nimport { Teacher } from '../../model/Teacher';\r\nimport { StudentWeekGrade } from '../../model/StudentWeekGrade';\r\nimport { StudentService } from '../../services/StudentService';\r\nimport {LoggerService} from '../../services/LoggerService';\r\nimport { reserveSlots } from '@angular/core/src/render3/instructions';\r\n\r\n@Component ({\r\n\ttemplateUrl : './attendance.html'\r\n})\r\nexport class AttendanceComponent  implements OnInit {\r\n\r\n\tpageTitle = \"Attendance\";\r\n\tuserName = '';\r\n    isLoggedOn: boolean;\r\n    CalendarWeeks: CalendarWeek[];\r\n    Grades: Grade[];\r\n\tTeachers : Teacher[];\r\n\tStudentWeekGrades : StudentWeekGrade[];\r\n\tScores : number[];\r\n\r\n\tisSelectCalendarWeekLoading:boolean;\r\n\tisSelectGradeLoading : boolean;\r\n\tisSelectTeacherLoading : boolean;\r\n\tisStudentWeekGradeGridLoading :boolean;\r\n\t\r\n\r\n    studentGridServerErrorMessage: string;\r\n    studentGridServerSuccessMessage: string;\r\n    studentGridServerWarningMessage: string;\r\n    isGridSaving: boolean;\r\n\r\n    showL1Grid: boolean;\r\n    isL1GridReadOnly: boolean;\r\n\r\n    showL2Grid: boolean;\r\n    isL2GridReadOnly: boolean;\r\n\r\n    showL3Grid: boolean;\r\n    isL3GridReadOnly: boolean;\r\n\r\n\r\n\tcalendarWeekLoadError : string;\r\n    gradeLoadError: string;\r\n\r\n    selectGradeEnabled: boolean;\r\n    selectTeachedEnabled: boolean;\r\n    \r\n\r\n    // Search criteria\r\n    calendarWeekId: number;\r\n    selectedGrade: string;\r\n    selectedGradeLevel: string;\r\n    selectedTeacherId: number;\r\n\r\n    gradeSelectionAllowed: boolean;\r\n    teacherSelectionAllowed: boolean;\r\n\r\n    constructor(private _authService: AuthService,\r\n        private _calendarService: CalendarService,\r\n        private _gradeService: GradeService,\r\n\t\tprivate _teacherService: TeacherService,\r\n\t\tprivate _studentService: StudentService,\r\n        private _loggerService: LoggerService,\r\n        private _router: Router) {\r\n\t}\r\n\r\n    ngOnInit() {\r\n        this.isLoggedOn = this._authService.getIsLoggedOn();\r\n        if (this.isLoggedOn == false) {\r\n            this._loggerService.log(\"Not logged in\");\r\n            this._router.navigate([\"loggedOut\"]);\r\n            return;\r\n        }\r\n\r\n        this._authService.hasAccess(\"Attendance\")\r\n            .then((x) => {\r\n                if (x == false) {\r\n                    this._loggerService.log(\"Unauthorized access\");\r\n                    this._router.navigate([\"accessDenied\"]);\r\n                }\r\n            }); \r\n\r\n        this.userName = this._authService.getUserName();\r\n\r\n        this.Scores = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\r\n\r\n        this.isSelectCalendarWeekLoading = false;\r\n        this.isSelectGradeLoading = false;\r\n        this.isSelectTeacherLoading = false;\r\n        this.isStudentWeekGradeGridLoading = false;\r\n        this.showL1Grid = false;\r\n        this.showL2Grid = false;\r\n        this.showL3Grid = false;\r\n\r\n        this.isGridSaving = false;\r\n        this.studentGridServerSuccessMessage = \"\";\r\n\r\n        this.calendarWeekId = 0;\r\n        this.selectedGrade = \"0\";\r\n        this.selectedGradeLevel = \"\";\r\n        this.selectedTeacherId = 0;\r\n\r\n        this.calendarWeekLoadError = \"\";\r\n        this.gradeLoadError = \"\";\r\n\r\n        this.selectGradeEnabled = true;\r\n        this.selectTeachedEnabled = true;\r\n\r\n        this.getCalendarWeeks();\r\n\r\n        this.gradeSelectionAllowed = false;\r\n        this.teacherSelectionAllowed = false;\r\n        this._authService.hasAccess(\"Attendance.GradeSelection\").then((x) => {\r\n            this.gradeSelectionAllowed = x;\r\n            if (this.gradeSelectionAllowed == true) {\r\n                this.getGrades();\r\n            }\r\n            else {\r\n                this.getGradeAndTeacherDetails();\r\n            }\r\n        });\r\n\r\n        this._authService.hasAccess(\"Attendance.TeacherSelection\").then((x) => {\r\n            this.teacherSelectionAllowed = x;\r\n        });\r\n    }\r\n\r\n    getGrades() {\r\n\t\tthis.isSelectGradeLoading = true;\r\n\t\tthis.gradeLoadError = \"\";\r\n        this._gradeService.getGrades()\r\n            .subscribe(result => {\r\n\t\t\t\tthis.isSelectGradeLoading = false;\r\n                this.Grades = result;\r\n            },\r\n            err => {\r\n\t\t\t\tthis.isSelectGradeLoading = false;\r\n                this._loggerService.log(\"Error occurred : Code=\" + err.status + \",Error=\" + err.statusText);\r\n                this.Grades = null;\r\n                this.gradeLoadError = \"Error Occured : \" + err.status + \":\" + err.statusText;\r\n                if (err.status == \"401\" || err.status == \"403\") {\r\n                    this.studentGridServerErrorMessage = \"UnAuthorized/Forbidden access or Session Expired. Please log out and login back to access the system.\"\r\n                }\r\n                else {\r\n                    this.studentGridServerErrorMessage = \"Error Occured while retrieving information : \" + err.status + \". Please try later or contact system administrator\";\r\n                }\r\n            });\r\n    }\r\n\r\n    getCalendarWeeks() {\r\n\t\tthis.isSelectCalendarWeekLoading = true;\r\n\t\tthis.calendarWeekLoadError = \"\";\r\n        this._calendarService.getCalendarWeeks()\r\n            .subscribe(result => {\r\n\t\t\t\tthis.isSelectCalendarWeekLoading = false;\r\n                this.CalendarWeeks = result;\r\n            },\r\n            err => {\r\n                this.isSelectCalendarWeekLoading = false;\r\n                this.CalendarWeeks = null;\r\n                this._loggerService.log(\"Error occurred : Code=\" + err.status + \",Error=\"+err.statusText);\r\n                this.calendarWeekLoadError = \"Error Occured : \" + err.status + \":\" + err.statusText;\r\n                if (err.status == \"401\" || err.status == \"403\") {\r\n                    this.studentGridServerErrorMessage = \"UnAuthorized/Forbidden access or Session Expired. Please log out and login back to access the system.\"\r\n                }\r\n                else {\r\n                    this.studentGridServerErrorMessage = \"Error Occured while retrieving information : \" + err.status + \". Please try later or contact system administrator\";\r\n                }\r\n            });\r\n    }\r\n\r\n    getGradeAndTeacherDetails() {\r\n        if (this.calendarWeekId != 0) {\r\n            this._teacherService.getAssignedTeacherByWeek(this.calendarWeekId)\r\n                .subscribe(result => {\r\n                    this.isSelectTeacherLoading = false;\r\n                    this.Teachers = result;\r\n\r\n                    //populate grade from result\r\n                    let gr: Array<Grade> = new Array<Grade>();\r\n                    gr.push(new Grade(this.Teachers[0].ctsGrade, this.Teachers[0].ctsGrade, this.Teachers[0].gradeLevel));\r\n                    this.Grades = gr;\r\n                    this.selectedGrade = this.Teachers[0].ctsGrade;\r\n                    this.selectedGradeLevel = this.Teachers[0].gradeLevel;\r\n                    this.selectGradeEnabled = false;\r\n\r\n                    if (this.Teachers.length > 1) {\r\n                        this.selectedTeacherId = 0;\r\n                    } else {\r\n                        this.selectedTeacherId = this.Teachers[0].id;\r\n                        this.selectTeachedEnabled = false;\r\n                        this.displayStudentWeekGradeGrid();\r\n                    }\r\n                },\r\n                err => {\r\n                    this.isSelectTeacherLoading = false;\r\n                    this._loggerService.log(\"Error occurred : Code=\" + err.status + \",Error=\" + err.statusText);\r\n                    this.Teachers = null;\r\n                    if (err.status == \"401\" || err.status == \"403\") {\r\n                        this.studentGridServerErrorMessage = \"UnAuthorized/Forbidden access or Session Expired. Please log out and login back to access the system.\"\r\n                    }\r\n                    else {\r\n                        this.studentGridServerErrorMessage = \"Error Occured while retrieving information : \" + err.status + \". Please try later or contact system administrator\";\r\n                    }\r\n                });\r\n        }\r\n    }\r\n\r\n    onSelectCalendarWeek(value : any) {\r\n        this.calendarWeekId = value;\r\n        this.studentGridServerErrorMessage = \"\";\r\n        this.studentGridServerWarningMessage = \"\";\r\n        this.studentGridServerSuccessMessage = \"\";\r\n\r\n        if (this.gradeSelectionAllowed == true) {\r\n            this.selectedGrade = \"0\";\r\n            this.selectedTeacherId = 0;\r\n            this.selectedGradeLevel = \"\"; \r\n        }\r\n        else {\r\n            this.getGradeAndTeacherDetails();\r\n        }\r\n        this.displayStudentWeekGradeGrid();\r\n    }\r\n\r\n    onSelectGrade(value: any) {\r\n        this.studentGridServerErrorMessage = \"\";\r\n        this.studentGridServerWarningMessage = \"\";\r\n        this.studentGridServerSuccessMessage = \"\";\r\n\r\n        if (value != \"0\") {\r\n            var selectedGrade = this.Grades.find(x => x.ctsGrade == value);\r\n            this.selectedGradeLevel = selectedGrade.gradeLevel;\r\n        }\r\n\r\n        if (this.teacherSelectionAllowed == true) {\r\n            this.studentGridServerErrorMessage = \"\";\r\n            this.studentGridServerWarningMessage = \"\";\r\n            this.Teachers = null;\r\n            this.selectedTeacherId = 0;\r\n            this.selectedGrade = value;\r\n\r\n            if (value != \"0\" && this.calendarWeekId != 0) {\r\n                this.getTeachersByGrade(this.selectedGrade, this.calendarWeekId);\r\n            }\r\n            this.displayStudentWeekGradeGrid();\r\n        }\r\n    }\r\n\r\n\tonSelectTeacher(value:any){\r\n        this.selectedTeacherId = value;\r\n        this.studentGridServerErrorMessage = \"\";\r\n        this.studentGridServerWarningMessage = \"\";\r\n        this.studentGridServerSuccessMessage = \"\";\r\n\r\n\t\tthis.displayStudentWeekGradeGrid();\r\n\t}\r\n\r\n\tgetTeachersByGrade(grade : string, weekId : number) {\r\n\t\tthis.isSelectTeacherLoading = true;\r\n        this._teacherService.getAssignedTeacherByGradeAndWeek(grade, weekId)\r\n            .subscribe(result => {\r\n\t\t\t\tthis.isSelectTeacherLoading = false;\r\n                this.Teachers = result;\r\n            },\r\n            err => {\r\n                this.isSelectTeacherLoading = false;\r\n                this.Teachers = null;\r\n\t\t\t\tthis._loggerService.log(\"Error occurred : Code=\" + err.status + \",Error=\"+err.statusText);\r\n                if (err.status == \"401\" || err.status == \"403\") {\r\n                    this.studentGridServerErrorMessage = \"UnAuthorized/Forbidden access or Session Expired. Please log out and login back to access the system.\"\r\n                }\r\n                else {\r\n                    this.studentGridServerErrorMessage = \"Error Occured while retrieving information : \" + err.status + \". Please try later or contact system administrator.\";\r\n                }\r\n            });\r\n    }\r\n\r\n\tdisplayStudentWeekGradeGrid(){\r\n\t\tthis.studentGridServerSuccessMessage = \"\";\r\n        if (this.calendarWeekId != 0 && this.selectedTeacherId != 0){\r\n\t\t\tthis.studentGridServerErrorMessage = \"\";\r\n            this.studentGridServerWarningMessage = \"\";\r\n            if (this.selectedGradeLevel == \"L1\") {\r\n                this.showL2Grid = false;\r\n                this.showL3Grid = false;\r\n                this.getL1WeekGrades();\r\n            }\r\n            else if (this.selectedGradeLevel == \"L2\") {\r\n                this.showL1Grid = false;\r\n                this.showL3Grid = false;\r\n                this.getL2WeekGrades();\r\n            }\r\n            else if (this.selectedGradeLevel == \"L3\") {\r\n                this.showL1Grid = false;\r\n                this.showL2Grid = false;\r\n                this.getL3WeekGrades();\r\n            }\r\n\t\t}\r\n\t\telse {\r\n            this.showL1Grid = false;\r\n            this.showL2Grid = false;\r\n            this.showL3Grid = false;\r\n\t\t}\r\n\t}\r\n\r\n    getL1WeekGrades() {\r\n        this.isStudentWeekGradeGridLoading = true;\r\n        this.showL1Grid = false;\r\n        this.studentGridServerErrorMessage = \"\";\r\n\r\n        this.studentGridServerWarningMessage = \"\";\r\n        this._teacherService.getWeekGrades(this.selectedTeacherId, this.selectedGradeLevel, this.calendarWeekId)\r\n            .subscribe(result => {\r\n                this.isStudentWeekGradeGridLoading = false;\r\n                this.StudentWeekGrades = result;\r\n                if (this.StudentWeekGrades == null) {\r\n\r\n                    this.showL1Grid = false;\r\n                    this.studentGridServerErrorMessage = \"No Student(s) assigned to selected teacher.\";\r\n                }\r\n                else {\r\n                    if (result.length > 0) {\r\n                        if (result[0].dataFreeze == 'Y') {\r\n                            this.isL1GridReadOnly = true;\r\n                        }\r\n                        else {\r\n                            this.isL1GridReadOnly = false;\r\n                        }\r\n                        if (result[0].id == 0) {\r\n                            this.studentGridServerWarningMessage = \"Note: Data not entered for this week, showing default entries\";\r\n                        }\r\n                    }\r\n\r\n                    this.showL1Grid = true;\r\n                }\r\n\r\n            },\r\n            err => {\r\n                this.isStudentWeekGradeGridLoading = false;\r\n                this.showL1Grid = false;\r\n                this.StudentWeekGrades = null;\r\n                this._loggerService.log(\"Error occurred : Code=\" + err.status + \",Error=\" + err.statusText);\r\n                if (err.status == \"401\" || err.status == \"403\") {\r\n                    this.studentGridServerErrorMessage = \"UnAuthorized/Forbidden access or Session Expired. Please log out and login back to access the system.\"\r\n                }\r\n                else {\r\n                    this.studentGridServerErrorMessage = \"Error Occured while retrieving information : \" + err.status + \". Please try later or contact system administrator.\";\r\n                }\r\n                });\r\n    }\r\n\r\n    getL2WeekGrades() {\r\n        this.isStudentWeekGradeGridLoading = true;\r\n        this.showL2Grid = false;\r\n        this.studentGridServerErrorMessage = \"\";\r\n\r\n        this.studentGridServerWarningMessage = \"\";\r\n        this._teacherService.getWeekGrades(this.selectedTeacherId, this.selectedGradeLevel, this.calendarWeekId)\r\n            .subscribe(result => {\r\n                this.isStudentWeekGradeGridLoading = false;\r\n                this.StudentWeekGrades = result;\r\n                if (this.StudentWeekGrades == null) {\r\n\r\n                    this.showL2Grid = false;\r\n                    this.studentGridServerErrorMessage = \"No Student(s) assigned to selected teacher.\";\r\n                }\r\n                else {\r\n                    if (result.length > 0) {\r\n                        if (result[0].dataFreeze == 'Y') {\r\n                            this.isL2GridReadOnly = true;\r\n                        }\r\n                        else {\r\n                            this.isL2GridReadOnly = false;\r\n                        }\r\n                        if (result[0].id == 0) {\r\n                            this.studentGridServerWarningMessage = \"Note: Data not entered for this week, showing default entries\";\r\n                        }\r\n                    }\r\n\r\n                    this.showL2Grid = true;\r\n                }\r\n\r\n            },\r\n                err => {\r\n                    this.isStudentWeekGradeGridLoading = false;\r\n                    this.showL2Grid = false;\r\n                    this.StudentWeekGrades = null;\r\n                    this._loggerService.log(\"Error occurred : Code=\" + err.status + \",Error=\" + err.statusText);\r\n                    if (err.status == \"401\" || err.status == \"403\") {\r\n                        this.studentGridServerErrorMessage = \"UnAuthorized/Forbidden access or Session Expired. Please log out and login back to access the system.\"\r\n                    }\r\n                    else {\r\n                        this.studentGridServerErrorMessage = \"Error Occured while retrieving information : \" + err.status + \". Please try later or contact system administrator.\";\r\n                    }\r\n                });\r\n    }\r\n\r\n\r\n\tgetL3WeekGrades(){\r\n\t\tthis.isStudentWeekGradeGridLoading = true;\r\n        this.showL3Grid = false;\r\n\t\tthis.studentGridServerErrorMessage = \"\";\r\n\r\n        this.studentGridServerWarningMessage = \"\";\r\n        this._teacherService.getWeekGrades(this.selectedTeacherId, this.selectedGradeLevel, this.calendarWeekId)\r\n            .subscribe(result => {\r\n                this.isStudentWeekGradeGridLoading = false;\r\n                this.StudentWeekGrades = result;\r\n\t\t\t\tif ( this.StudentWeekGrades == null ){\r\n\r\n                    this.showL3Grid = false;\r\n\t\t\t\t\tthis.studentGridServerErrorMessage = \"No Student(s) assigned to selected teacher.\";\r\n\t\t\t\t}\r\n                else {\r\n                    if (result.length > 0) {\r\n                        if (result[0].dataFreeze == 'Y') {\r\n                            this.isL3GridReadOnly = true;\r\n                        }\r\n                        else {\r\n                            this.isL3GridReadOnly = false;\r\n                        }\r\n                        if (result[0].id == 0) {\r\n                            this.studentGridServerWarningMessage = \"Note: Data not entered for this week, showing default entries\";\r\n                        }\r\n                    }\r\n\r\n                    this.showL3Grid = true;\r\n\t\t\t\t}\r\n\r\n            },\r\n            err => {\r\n                this.isStudentWeekGradeGridLoading = false;\r\n                this.showL3Grid = false;\r\n                this.StudentWeekGrades = null;\r\n                this._loggerService.log(\"Error occurred : Code=\" + err.status + \",Error=\" + err.statusText);\r\n                if (err.status == \"401\" || err.status == \"403\") {\r\n                    this.studentGridServerErrorMessage = \"UnAuthorized/Forbidden access or Session Expired. Please log out and login back to access the system.\"\r\n                }\r\n                else {\r\n                    this.studentGridServerErrorMessage = \"Error Occured while retrieving information : \" + err.status + \". Please try later or contact system administrator.\";\r\n                }\r\n            });\r\n\t}\r\n\r\n\tselectScore(weekGrade : StudentWeekGrade, type: string, value:number){\r\n\t\tswitch (type){\r\n\t\t\tcase 'homework':\r\n\t\t\t\tweekGrade.homework = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'reading':\r\n\t\t\t\tweekGrade.reading = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'writing':\r\n\t\t\t\tweekGrade.writing = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'speaking':\r\n\t\t\t\tweekGrade.speaking = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'behavior':\r\n\t\t\t\tweekGrade.behavior = value;\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'quiz':\r\n\t\t\t\tweekGrade.quiz = value;\r\n                break;\r\n            case 'participation':\r\n                weekGrade.participation = value;\r\n                break;\r\n\t\t}\r\n\t\t\r\n\t}\r\n\r\n\tselectAttendance(weekGrade : StudentWeekGrade, value:string){\r\n\t\tif ( value == '0')\r\n\t\t{\r\n\t\t\tweekGrade.homework = 0;\r\n\t\t\tweekGrade.reading = 0;\r\n\t\t\tweekGrade.writing = 0;\r\n\t\t\tweekGrade.speaking = 0;\r\n\t\t\tweekGrade.behavior = 0;\r\n            weekGrade.quiz = 0;\r\n            weekGrade.participation = 0;\r\n\t\t\tweekGrade.notes = null;\r\n\t\t}\r\n\t}\r\n\r\n\tcancelClick(){\r\n        this.showL1Grid = false;\r\n        this.showL2Grid = false;\r\n        this.showL3Grid = false;\r\n\r\n\t\tthis.studentGridServerSuccessMessage = \"\";\r\n        this.studentGridServerErrorMessage = \"\";\r\n        this.studentGridServerWarningMessage = \"\";\r\n\t\tthis.StudentWeekGrades = null;\r\n        this.selectedTeacherId = 0;\r\n\t}\r\n\r\n\tsaveClick(){\r\n        this.isGridSaving = true;\r\n\r\n\t\tthis.studentGridServerErrorMessage = \"\";\r\n        this.studentGridServerSuccessMessage = \"\";\r\n        this.studentGridServerWarningMessage = \"\";\r\n        this._studentService.saveStudentWeekGrades(this.selectedGradeLevel, this.StudentWeekGrades)\r\n\t\t\t.subscribe(result=> {\r\n                this.isGridSaving = false;\r\n\t\t\t\tthis.studentGridServerSuccessMessage = \"Student Week Grades saved successfully !\";\r\n\t\t\t},\r\n\t\t\terr=> {\r\n                this.isGridSaving = false;\r\n\t\t\t\tthis.studentGridServerSuccessMessage = \"\";\r\n                this._loggerService.log(\"Error occurred : Code=\" + err.status + \",Error=\" + err.statusText);\r\n                if (err.status == \"401\" || err.status == \"403\") {\r\n                    this.studentGridServerErrorMessage = \"UnAuthorized/Forbidden access or Session Expired. Please log out and login back to access the system.\"\r\n                }\r\n                else {\r\n                    this.studentGridServerErrorMessage = \"Error Occured while retrieving information : \" + err.status + \". Please try later or contact system administrator.\";\r\n                }\r\n\r\n\t\t\t});\r\n\r\n    }\r\n\r\n    showSaveButton(): boolean {\r\n        let show: boolean = false;\r\n        switch (this.selectedGradeLevel) {\r\n            case \"L1\":\r\n                show = !this.isL1GridReadOnly;\r\n                break;\r\n            case \"L2\":\r\n                show = !this.isL2GridReadOnly;\r\n                break;\r\n            case \"L3\":\r\n                show = !this.isL3GridReadOnly;\r\n                break;\r\n        }\r\n\r\n        return show;\r\n    }\r\n }\r\n","module.exports = \"<header class=\\\"container-fluid p0\\\">\\r\\n    <nav class=\\\"navbar navbar-light navbar-expand-md bgcolorMenu\\\">\\r\\n        <div class=\\\"row \\\">\\r\\n            <button class=\\\"navbar-toggler\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#menuBar\\\">\\r\\n                <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n            </button>\\r\\n            <div id=\\\"menuBar\\\" class=\\\"navbar-collapse collapse\\\">\\r\\n                <ul class=\\\"navbar-nav\\\">\\r\\n                    <li class=\\\"nav-item\\\"><a class=\\\"nav-link py-0\\\" routerLink=\\\"/home\\\">Home</a></li>\\r\\n                    <li *ngIf=\\\"isLoggedOn\\\" class=\\\"nav-item active\\\"><a class=\\\"nav-link py-0\\\" routerLink=\\\"/attendance\\\">Attendance</a></li>\\r\\n                    <li *ngIf=\\\"isLoggedOn\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link py-0\\\" routerLink=\\\"/scores\\\">Test Scores</a></li>\\r\\n                    <!--<li class=\\\"nav-item\\\"><a class=\\\"nav-link py-0\\\" routerLink=\\\"/contactus\\\">Contact Us</a></li>\\r\\n    <li class=\\\"nav-item\\\"><a class=\\\"nav-link py-0\\\">About Us</a></li>-->\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n    </nav>\\r\\n\\r\\n</header>\\r\\n<div class=\\\"container p0 mt10\\\">\\r\\n    <!--<h4 class=\\\"text-center\\\">{{pageTitle}}</h4>-->\\r\\n\\r\\n    <div class=\\\"row bgBar br5 m5 p5\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <div class=\\\"input-group\\\">\\r\\n                <label for=\\\"selectCalenderWeek\\\" class=\\\"mt5\\\">Week</label>\\r\\n                <img *ngIf=\\\"isSelectCalendarWeekLoading\\\" src=\\\"/img/Loading.gif\\\" height=\\\"40\\\" width=\\\"40\\\" class=\\\"ml10\\\" />\\r\\n                <i *ngIf=\\\"calendarWeekLoadError\\\" class=\\\"fa fa-exclamation-triangle form-control errorText\\\"> {{calendarWeekLoadError}}</i>\\r\\n                <select *ngIf=\\\"!isSelectCalendarWeekLoading && !calendarWeekLoadError\\\" name=\\\"selectCalenderWeek\\\" class=\\\"ml10 selectpicker form-control selectWidth\\\" (change)=\\\"onSelectCalendarWeek($event.target.value)\\\">\\r\\n                    <option value=\\\"0\\\">--Select Week--</option>\\r\\n                    <option *ngFor=\\\"let week of CalendarWeeks\\\" value={{week.id}}>\\r\\n                        {{week.description}} - {{week.weekDate | date: 'MM/dd/yyyy'}}\\r\\n                    </option>\\r\\n                </select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <div class=\\\"input-group\\\">\\r\\n                <label for=\\\"selectGrade\\\" class=\\\"mt5\\\">Grade</label>\\r\\n                <img *ngIf=\\\"isSelectGradeLoading\\\" src=\\\"/img/Loading.gif\\\" height=\\\"40\\\" width=\\\"40\\\" class=\\\"ml10\\\" />\\r\\n                <i *ngIf=\\\"gradeLoadError\\\" class=\\\"fa fa-exclamation-triangle form-control errorText\\\"> {{gradeLoadError}}</i>\\r\\n                <select *ngIf=\\\"!isSelectGradeLoading && !gradeLoadError\\\" name=\\\"selectGrade\\\" class=\\\"ml10 selectpicker form-control selectWidth\\\"\\r\\n                        (change)=\\\"onSelectGrade($event.target.value)\\\" [(ngModel)]=\\\"selectedGrade\\\" [disabled]=\\\"!selectGradeEnabled\\\">\\r\\n                    <option value=\\\"0\\\">--Select Grade--</option>\\r\\n                    <option *ngFor=\\\"let grade of Grades\\\" value={{grade.ctsGrade}}>\\r\\n                        {{grade.ctsGrade}}\\r\\n                    </option>\\r\\n                </select>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <div class=\\\"input-group\\\">\\r\\n                <label for=\\\"selectTeacher\\\" class=\\\"mt5\\\">Teacher</label>\\r\\n                <img *ngIf=\\\"isSelectTeacherLoading\\\" src=\\\"/img/Loading.gif\\\" height=\\\"40\\\" width=\\\"40\\\" class=\\\"ml10\\\" />\\r\\n                <select *ngIf=\\\"!isSelectTeacherLoading\\\" name=\\\"selectTeacher\\\" class=\\\"ml10 selectpicker form-control selectWidth\\\"\\r\\n                        (change)=\\\"onSelectTeacher($event.target.value)\\\" [(ngModel)]=\\\"selectedTeacherId\\\" [disabled]=\\\"!selectTeachedEnabled\\\">\\r\\n                    <option value=\\\"0\\\">--Select Teacher--</option>\\r\\n                    <option *ngFor=\\\"let teacher of Teachers\\\" value={{teacher.id}}>\\r\\n                        {{teacher.firstName}} {{teacher.lastName}}\\r\\n                    </option>\\r\\n                </select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <!--<div class=\\\"col-md-2\\\">\\r\\n            <button class=\\\"btn btn-primary btn-sm right mt5\\\"><strong><i class=\\\"fa fa-list-ul\\\"></i> List Students</strong></button>\\r\\n        </div>-->\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div *ngIf=\\\"isStudentWeekGradeGridLoading\\\" class=\\\"col-md-12\\\">Loading Student Grades. Please wait.<img src=\\\"/img/Loading.gif\\\" height=\\\"40\\\" width=\\\"40\\\" class=\\\"ml10\\\" /></div>\\r\\n        <div *ngIf=\\\"studentGridServerWarningMessage\\\" class=\\\"col-md-12 mt10 ml10 errorText\\\"><i class=\\\"fa fa-exclamation-triangle\\\"></i> {{studentGridServerWarningMessage}} </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"showL1Grid\\\">\\r\\n        <div class=\\\"col-md-12\\\" id=\\\"no-more-tables\\\">\\r\\n            <table class=\\\"table-bordered table-condensed cf\\\" id=\\\"dev-table\\\">\\r\\n                <thead class=\\\"bgTableHead cf\\\">\\r\\n                    <tr>\\r\\n                        <th class=\\\"fw\\\">ID</th>\\r\\n                        <th class=\\\"fw w150\\\">First Name</th>\\r\\n                        <th class=\\\"fw w150\\\">Last Name</th>\\r\\n                        <th class=\\\"fw\\\">Attendance</th>\\r\\n                        <th class=\\\"fw\\\">Behaviour</th>\\r\\n                        <th class=\\\"fw\\\">Participation</th>\\r\\n                        <th class=\\\"fw w200\\\">Notes</th>\\r\\n\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody *ngIf=\\\"!isL1GridReadOnly\\\">\\r\\n\\r\\n                    <tr *ngFor=\\\"let weekGrade of StudentWeekGrades\\\">\\r\\n                        <td data-title=\\\"ID\\\">{{weekGrade.studentID}}</td>\\r\\n                        <td data-title=\\\"First Name\\\">{{weekGrade.firstName}}</td>\\r\\n                        <td data-title=\\\"Last Name\\\">{{weekGrade.lastName}}</td>\\r\\n                        <td data-title=\\\"Attendance\\\">\\r\\n                            <select class=\\\"selectpicker form-control\\\" (change)=\\\"selectAttendance(weekGrade, $event.target.value)\\\" [(ngModel)]=\\\"weekGrade.attendance\\\" required>\\r\\n                                <option value=\\\"10\\\">Yes</option>\\r\\n                                <option value=\\\"0\\\">No</option>\\r\\n                            </select>\\r\\n                        </td>\\r\\n                        <td data-title=\\\"Behavior\\\">\\r\\n                            <select class=\\\"selectpicker form-control\\\" (change)=\\\"selectScore(weekGrade, 'behavior', $event.target.value)\\\" [(ngModel)]=\\\"weekGrade.behavior\\\">\\r\\n                                <option *ngFor=\\\"let score of Scores\\\" value={{score}}>\\r\\n                                    {{score}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                        </td>\\r\\n                        <td data-title=\\\"Participation\\\">\\r\\n                            <select class=\\\"selectpicker form-control\\\" (change)=\\\"selectScore(weekGrade, 'participation', $event.target.value)\\\" [(ngModel)]=\\\"weekGrade.participation\\\">\\r\\n                                <option *ngFor=\\\"let score of Scores\\\" value={{score}}>\\r\\n                                    {{score}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                        </td>\\r\\n                        <td data-title=\\\"Notes\\\"><textarea class=\\\"form-control rounded-3\\\" rows=\\\"1\\\" [(ngModel)]=\\\"weekGrade.notes\\\" maxlength=\\\"100\\\">{{weekGrade.notes}}</textarea></td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n                <tbody *ngIf=\\\"isL1GridReadOnly\\\">\\r\\n                    <tr *ngFor=\\\"let weekGrade of StudentWeekGrades\\\">\\r\\n                        <td data-title=\\\"ID\\\">{{weekGrade.studentID}}</td>\\r\\n                        <td data-title=\\\"First Name\\\">{{weekGrade.firstName}}</td>\\r\\n                        <td data-title=\\\"Last Name\\\">{{weekGrade.lastName}}</td>\\r\\n                        <td data-title=\\\"Attendance\\\">{{weekGrade.attendance}}</td>\\r\\n                        <td data-title=\\\"Behavior\\\">{{weekGrade.behavior}}</td>\\r\\n                        <td data-title=\\\"Participation\\\">{{weekGrade.participation}}</td>\\r\\n                        <td data-title=\\\"Notes\\\">{{weekGrade.notes}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"showL2Grid\\\">\\r\\n        <div class=\\\"col-md-12\\\" id=\\\"no-more-tables\\\">\\r\\n            <table class=\\\"table-bordered table-condensed cf\\\" id=\\\"dev-table\\\">\\r\\n                <thead class=\\\"bgTableHead cf\\\">\\r\\n                    <tr>\\r\\n                        <th class=\\\"fw\\\">ID</th>\\r\\n                        <th class=\\\"fw w150\\\">First Name</th>\\r\\n                        <th class=\\\"fw w150\\\">Last Name</th>\\r\\n                        <th class=\\\"fw\\\">Attendance</th>\\r\\n                        <th class=\\\"fw\\\">Homework</th>\\r\\n                        <th class=\\\"fw\\\">Behaviour</th>\\r\\n                        <th class=\\\"fw\\\">Participation</th>\\r\\n                        <th class=\\\"fw w200\\\">Notes</th>\\r\\n\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody *ngIf=\\\"!isL2GridReadOnly\\\">\\r\\n\\r\\n                    <tr *ngFor=\\\"let weekGrade of StudentWeekGrades\\\">\\r\\n                        <td data-title=\\\"ID\\\">{{weekGrade.studentID}}</td>\\r\\n                        <td data-title=\\\"First Name\\\">{{weekGrade.firstName}}</td>\\r\\n                        <td data-title=\\\"Last Name\\\">{{weekGrade.lastName}}</td>\\r\\n                        <td data-title=\\\"Attendance\\\">\\r\\n                            <select class=\\\"selectpicker form-control\\\" (change)=\\\"selectAttendance(weekGrade, $event.target.value)\\\" [(ngModel)]=\\\"weekGrade.attendance\\\" required>\\r\\n                                <option value=\\\"10\\\">Yes</option>\\r\\n                                <option value=\\\"0\\\">No</option>\\r\\n                            </select>\\r\\n                        </td>\\r\\n                        <td data-title=\\\"Homework\\\">\\r\\n                            <select class=\\\"selectpicker form-control\\\" (change)=\\\"selectScore(weekGrade, 'homework', $event.target.value)\\\" [(ngModel)]=\\\"weekGrade.homework\\\">\\r\\n                                <option *ngFor=\\\"let score of Scores\\\" value={{score}}>\\r\\n                                    {{score}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                        </td>\\r\\n                        <td data-title=\\\"Behavior\\\">\\r\\n                            <select class=\\\"selectpicker form-control\\\" (change)=\\\"selectScore(weekGrade, 'behavior', $event.target.value)\\\" [(ngModel)]=\\\"weekGrade.behavior\\\">\\r\\n                                <option *ngFor=\\\"let score of Scores\\\" value={{score}}>\\r\\n                                    {{score}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                        </td>\\r\\n                        <td data-title=\\\"Participation\\\">\\r\\n                            <select class=\\\"selectpicker form-control\\\" (change)=\\\"selectScore(weekGrade, 'participation', $event.target.value)\\\" [(ngModel)]=\\\"weekGrade.participation\\\">\\r\\n                                <option *ngFor=\\\"let score of Scores\\\" value={{score}}>\\r\\n                                    {{score}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                        </td>\\r\\n\\r\\n                        <td data-title=\\\"Notes\\\"><textarea class=\\\"form-control rounded-3\\\" rows=\\\"1\\\" [(ngModel)]=\\\"weekGrade.notes\\\" maxlength=\\\"100\\\">{{weekGrade.notes}}</textarea></td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n                <tbody *ngIf=\\\"isL2GridReadOnly\\\">\\r\\n                    <tr *ngFor=\\\"let weekGrade of StudentWeekGrades\\\">\\r\\n                        <td data-title=\\\"ID\\\">{{weekGrade.studentID}}</td>\\r\\n                        <td data-title=\\\"First Name\\\">{{weekGrade.firstName}}</td>\\r\\n                        <td data-title=\\\"Last Name\\\">{{weekGrade.lastName}}</td>\\r\\n                        <td data-title=\\\"Attendance\\\">{{weekGrade.attendance}}</td>\\r\\n                        <td data-title=\\\"Homework\\\">{{weekGrade.homework}}</td>\\r\\n                        <td data-title=\\\"Behavior\\\">{{weekGrade.behavior}}</td>\\r\\n                        <td data-title=\\\"Participation\\\">{{weekGrade.participation}}</td>\\r\\n                        <td data-title=\\\"Notes\\\">{{weekGrade.notes}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"showL3Grid\\\">\\r\\n        <div class=\\\"col-md-12\\\" id=\\\"no-more-tables\\\">\\r\\n            <table class=\\\"table-bordered table-condensed cf\\\" id=\\\"dev-table\\\">\\r\\n                <thead class=\\\"bgTableHead cf\\\">\\r\\n                    <tr>\\r\\n                        <th class=\\\"fw\\\">ID</th>\\r\\n                        <th class=\\\"fw w150\\\">First Name</th>\\r\\n                        <th class=\\\"fw w150\\\">Last Name</th>\\r\\n                        <th class=\\\"fw\\\">Attendance</th>\\r\\n                        <th class=\\\"fw\\\">Homework</th>\\r\\n                        <th class=\\\"fw\\\">Reading</th>\\r\\n                        <th class=\\\"fw\\\">Writing</th>\\r\\n                        <th class=\\\"fw\\\">Speaking</th>\\r\\n                        <th class=\\\"fw\\\">Behaviour</th>\\r\\n                        <th class=\\\"fw\\\">Quiz</th>\\r\\n                        <th class=\\\"fw w200\\\">Notes</th>\\r\\n\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody *ngIf=\\\"!isL3GridReadOnly\\\">\\r\\n\\r\\n                    <tr *ngFor=\\\"let weekGrade of StudentWeekGrades\\\">\\r\\n                        <td data-title=\\\"ID\\\">{{weekGrade.studentID}}</td>\\r\\n                        <td data-title=\\\"First Name\\\">{{weekGrade.firstName}}</td>\\r\\n                        <td data-title=\\\"Last Name\\\">{{weekGrade.lastName}}</td>\\r\\n                        <td data-title=\\\"Attendance\\\">\\r\\n                            <select class=\\\"selectpicker form-control\\\" (change)=\\\"selectAttendance(weekGrade, $event.target.value)\\\" [(ngModel)]=\\\"weekGrade.attendance\\\" required>\\r\\n                                <option value=\\\"10\\\">Yes</option>\\r\\n                                <option value=\\\"0\\\">No</option>\\r\\n                            </select>\\r\\n                        </td>\\r\\n                        <td data-title=\\\"Homework\\\">\\r\\n                            <select class=\\\"selectpicker form-control\\\" (change)=\\\"selectScore(weekGrade, 'homework', $event.target.value)\\\" [(ngModel)]=\\\"weekGrade.homework\\\">\\r\\n                                <option *ngFor=\\\"let score of Scores\\\" value={{score}}>\\r\\n                                    {{score}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                        </td>\\r\\n                        <td data-title=\\\"Reading\\\">\\r\\n                            <select class=\\\"selectpicker form-control\\\" (change)=\\\"selectScore(weekGrade, 'reading', $event.target.value)\\\" [(ngModel)]=\\\"weekGrade.reading\\\">\\r\\n                                <option *ngFor=\\\"let score of Scores\\\" value={{score}}>\\r\\n                                    {{score}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                        </td>\\r\\n                        <td data-title=\\\"Writing\\\">\\r\\n                            <select class=\\\"selectpicker form-control\\\" (change)=\\\"selectScore(weekGrade, 'writing', $event.target.value)\\\" [(ngModel)]=\\\"weekGrade.writing\\\">\\r\\n                                <option *ngFor=\\\"let score of Scores\\\" value={{score}}>\\r\\n                                    {{score}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                        </td>\\r\\n                        <td data-title=\\\"Speaking\\\">\\r\\n                            <select class=\\\"selectpicker form-control\\\" (change)=\\\"selectScore(weekGrade, 'speaking', $event.target.value)\\\" [(ngModel)]=\\\"weekGrade.speaking\\\">\\r\\n                                <option *ngFor=\\\"let score of Scores\\\" value={{score}}>\\r\\n                                    {{score}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                        </td>\\r\\n                        <td data-title=\\\"Behavior\\\">\\r\\n                            <select class=\\\"selectpicker form-control\\\" (change)=\\\"selectScore(weekGrade, 'behavior', $event.target.value)\\\" [(ngModel)]=\\\"weekGrade.behavior\\\">\\r\\n                                <option *ngFor=\\\"let score of Scores\\\" value={{score}}>\\r\\n                                    {{score}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                        </td>\\r\\n                        <td data-title=\\\"Quiz\\\">\\r\\n                            <select class=\\\"selectpicker form-control\\\" (change)=\\\"selectScore(weekGrade, 'quiz', $event.target.value)\\\" [(ngModel)]=\\\"weekGrade.quiz\\\">\\r\\n                                <option *ngFor=\\\"let score of Scores\\\" value={{score}}>\\r\\n                                    {{score}}\\r\\n                                </option>\\r\\n                            </select>\\r\\n                        </td>\\r\\n                        <td data-title=\\\"Notes\\\"><textarea class=\\\"form-control rounded-3\\\" rows=\\\"1\\\" [(ngModel)]=\\\"weekGrade.notes\\\" maxlength=\\\"100\\\">{{weekGrade.notes}}</textarea></td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n                <tbody *ngIf=\\\"isL2GridReadOnly\\\">\\r\\n                    <tr *ngFor=\\\"let weekGrade of StudentWeekGrades\\\">\\r\\n                        <td data-title=\\\"ID\\\">{{weekGrade.studentID}}</td>\\r\\n                        <td data-title=\\\"First Name\\\">{{weekGrade.firstName}}</td>\\r\\n                        <td data-title=\\\"Last Name\\\">{{weekGrade.lastName}}</td>\\r\\n                        <td data-title=\\\"Attendance\\\">{{weekGrade.attendance}}</td>\\r\\n                        <td data-title=\\\"Homework\\\">{{weekGrade.homework}}</td>\\r\\n                        <td data-title=\\\"Reading\\\">{{weekGrade.reading}}</td>\\r\\n                        <td data-title=\\\"Writing\\\">{{weekGrade.writing}}</td>\\r\\n                        <td data-title=\\\"Speaking\\\">{{weekGrade.speaking}}</td>\\r\\n                        <td data-title=\\\"Behavior\\\">{{weekGrade.behavior}}</td>\\r\\n                        <td data-title=\\\"Quiz\\\">{{weekGrade.quiz}}</td>\\r\\n                        <td data-title=\\\"Notes\\\">{{weekGrade.notes}}</td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div *ngIf=\\\"studentGridServerErrorMessage\\\" class=\\\"col-md-12 mt10 ml10 errorText\\\"><i class=\\\"fa fa-exclamation-triangle\\\"></i> {{studentGridServerErrorMessage}} </div>\\r\\n        <div *ngIf=\\\"studentGridServerSuccessMessage\\\" class=\\\"col-md-12 mt10 ml10 successText\\\"><i class=\\\"fa fa-check-circle\\\"></i>  {{studentGridServerSuccessMessage}}</div>\\r\\n    </div>\\r\\n    <div class=\\\"row bgBar br5 m5 p5\\\" *ngIf=\\\"isGridSaving\\\">\\r\\n        <div class=\\\"col-md-12\\\">Saving Student Grades. Please wait.<img src=\\\"/img/Loading.gif\\\" height=\\\"40\\\" width=\\\"40\\\" class=\\\"ml10\\\" /></div>\\r\\n    </div>\\r\\n    <div class=\\\"row bgBar br5 m5 p5\\\" *ngIf=\\\"(showL1Grid || showL2Grid || showL3Grid) && !isGridSaving\\\">\\r\\n\\r\\n        <div class=\\\"col-md-4\\\"></div>\\r\\n        <div class=\\\"col-md-4 \\\">\\r\\n            <button class=\\\"btn btn-primary btn-sm\\\" type=\\\"button\\\" (click)=\\\"cancelClick()\\\"><strong><i class=\\\"fa fa-times-circle\\\"></i> Cancel</strong></button>\\r\\n            <button class=\\\"btn btn-primary btn-sm ml10\\\" (click)=\\\"saveClick()\\\" type=\\\"submit\\\" *ngIf=\\\"showSaveButton()\\\"><strong><i class=\\\"fa fa-save\\\"></i> Save</strong></button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\"></div>\\r\\n    </div>\\r\\n</div>\"","﻿import {Component, OnInit} from '@angular/core'\r\n\r\nimport {AuthService} from '../../services/AuthService';\r\n\r\n@Component ({\r\n\ttemplateUrl : './contact.html'\r\n})\r\nexport class ContactComponent implements OnInit {\r\n\r\n\tpageTitle = \"Contact Us\";\r\n\tuserName = '';\r\n\tisLoggedOn : boolean;\r\n\r\n\tconstructor(private _authService: AuthService){\r\n\t}\r\n\r\n\tngOnInit(){\r\n\t\tthis.isLoggedOn = this._authService.getIsLoggedOn();\r\n\t\tthis.userName = this._authService.getUserName();\r\n\t}\r\n}","module.exports = \"<header class=\\\"container-fluid p0\\\">\\r\\n    <nav class=\\\"navbar navbar-light navbar-expand-md bgcolorMenu\\\">\\r\\n        <div class=\\\"row \\\">\\r\\n            <button class=\\\"navbar-toggler\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#menuBar\\\">\\r\\n                <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n            </button>\\r\\n            <div id=\\\"menuBar\\\" class=\\\"navbar-collapse collapse\\\">\\r\\n                <ul class=\\\"navbar-nav\\\">\\r\\n                    <li class=\\\"nav-item\\\"><a class=\\\"nav-link py-0\\\" routerLink=\\\"/home\\\">Home</a></li>\\r\\n                    <li *ngIf=\\\"isLoggedOn\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link py-0\\\" routerLink=\\\"/attendance\\\">Attendance</a></li>\\r\\n                    <li class=\\\"nav-item active\\\"><a class=\\\"nav-link py-0\\\" routerLink=\\\"/contactus\\\">Contact Us</a></li>\\r\\n                    <li class=\\\"nav-item\\\"><a class=\\\"nav-link py-0\\\">About Us</a></li>\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n    </nav>\\r\\n</header>\\r\\n<div class=\\\"container-fluid p0\\\">\\r\\n    <h4 class=\\\"text-center\\\">{{pageTitle}}</h4>\\r\\n    <div class=\\\"col-md-6 offset-md-3\\\">\\r\\n        <div class=\\\"card card-body bg-light\\\">\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"UserName\\\">Name:</label>\\r\\n                <input id=\\\"UserName\\\" name=\\\"UserName\\\" type=\\\"text\\\" class=\\\"form-control\\\" />\\r\\n                <span id=\\\"errorUserName\\\" class=\\\"text-danger\\\"></span>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"UserEmail\\\">Email:</label>\\r\\n                <input id=\\\"UserEmail\\\" name=\\\"UserEmail\\\" type=\\\"email\\\" class=\\\"form-control\\\" />\\r\\n                <span id=\\\"errorUserEmail\\\" class=\\\"text-danger\\\"></span>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"Subject\\\">Phone:</label>\\r\\n                <input id=\\\"Phone\\\" name=\\\"Phone\\\" type=\\\"text\\\" class=\\\"form-control\\\" />\\r\\n                <span id=\\\"Phone\\\" class=\\\"text-danger\\\"></span>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"Subject\\\">Subject:</label>\\r\\n                <input id=\\\"Subject\\\" name=\\\"Subject\\\" type=\\\"text\\\" class=\\\"form-control\\\" />\\r\\n                <span id=\\\"Subject\\\" class=\\\"text-danger\\\"></span>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n                <label for=\\\"Message\\\">Message:</label>\\r\\n                <textarea id=\\\"Message\\\" name=\\\"Message\\\" class=\\\"form-control\\\"></textarea>\\r\\n                <span id=\\\"Message\\\" class=\\\"text-danger\\\"></span>\\r\\n            </div>\\r\\n            <div class=\\\"form-group\\\">\\r\\n\\r\\n                <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-sm\\\"><i class=\\\"fa fa-envelope\\\"> </i> Send Message</button>\\r\\n                <div class=\\\"text-success\\\"></div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","﻿import { Component, OnInit, PACKAGE_ROOT_URL } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport {AuthService} from '../../services/AuthService';\r\nimport { LoggerService } from '../../services/LoggerService';\r\n\r\n@Component({\r\n  templateUrl: './home.html'\r\n})\r\nexport class HomeComponent  implements OnInit {\r\n    pageTitle = 'Home Page';\r\n    appTitle: string;\r\n  userName = '';\r\n\r\n  isLoggedOn : boolean;\r\n  CarouselImages : any[];\r\n\r\n    constructor(private _authService: AuthService,\r\n        private _loggerService: LoggerService,\r\n        private _router: Router) {\r\n  }\r\n\r\n  ngOnInit(){\r\n\r\n\tthis.isLoggedOn = this._authService.getIsLoggedOn();\r\n      this.userName = this._authService.getUserName();\r\n      this.appTitle = \"Cary Tamil School - Attendance and Score System\";\r\n\r\n      if (this.isLoggedOn == false) {\r\n          this.resetLoginControls();\r\n      }\r\n      else {\r\n          if (this._authService.authFunctions == null) {\r\n              this._loggerService.log(\"home ts - > getting authFunctions\");\r\n              this._authService.getAuthFunctions()\r\n                  .subscribe(result => {\r\n                      this._authService.authFunctions = result;\r\n                  },\r\n                      err => {\r\n                          this._loggerService.log(\"Error occurred : Code=\" + err.status + \",Error=\" + err.statusText);\r\n                      });\r\n          }\r\n      }\r\n\r\n\tthis.CarouselImages = [\r\n\t\t{src :\"/img/Carousel-1.jpg\", alt :'First', slideTo:\"0\"},\r\n\t\t{src :\"/img/Carousel-2.jpg\", alt :'Second', slideTo:\"1\"},\r\n\t\t{src :\"/img/Carousel-3.jpg\", alt :'Third', slideTo:\"2\"},\r\n\t\t{src :\"/img/Carousel-4.jpg\", alt :'Fourth', slideTo:\"3\"},\r\n\t\t{src :\"/img/Carousel-5.jpg\", alt :'Fifth', slideTo:\"4\"}\r\n\t]\r\n  }\r\n\r\n  resetLoginControls(){\r\n\tvar loginLinkElement = document.getElementById(\"loginLink\");\r\n\tvar logoutLinkElement = document.getElementById(\"logoutLink\");\r\n\tvar loggedinElement = document.getElementById(\"loggedInAs\");\r\n\tif ( loggedinElement != null){\r\n\t\tloggedinElement.innerText = \"\";\r\n\t}\r\n\t\t\r\n\tif ( loginLinkElement != null){\r\n\t\tloginLinkElement.style.display = \"block\";\r\n\t}\r\n\t\t\r\n\tif ( logoutLinkElement != null){\r\n\t\tlogoutLinkElement.style.display = \"none\";\r\n\t}\r\n  }\r\n}\r\n","module.exports = \"<header class=\\\"container-fluid p0\\\">\\r\\n    <nav class=\\\"navbar navbar-light navbar-expand-md bgcolorMenu\\\">\\r\\n        <div class=\\\"row \\\">\\r\\n            <button class=\\\"navbar-toggler\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#menuBar\\\">\\r\\n                <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n            </button>\\r\\n            <div id=\\\"menuBar\\\" class=\\\"navbar-collapse collapse\\\">\\r\\n                <ul class=\\\"navbar-nav\\\">\\r\\n                    <li class=\\\"nav-item active\\\"><a class=\\\"nav-link py-0\\\" routerLink=\\\"/home\\\">Home</a></li>\\r\\n                    <li *ngIf=\\\"isLoggedOn\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link py-0\\\" routerLink=\\\"/attendance\\\">Attendance</a></li>\\r\\n                    <li *ngIf=\\\"isLoggedOn\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link py-0\\\" routerLink=\\\"/scores\\\">Test Scores</a></li>\\r\\n                    <!--<li class=\\\"nav-item\\\"><a class=\\\"nav-link py-0\\\" routerLink=\\\"/contactus\\\">Contact Us</a></li>\\r\\n    <li class=\\\"nav-item\\\"><a class=\\\"nav-link py-0\\\">About Us</a></li>-->\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n    </nav>\\r\\n</header>\\r\\n<div class=\\\"container-fluid p0\\\">\\r\\n    <!--<h4 class=\\\"text-center\\\">{{pageTitle}}</h4>-->\\r\\n    <div class=\\\"row m5 p5\\\">\\r\\n        <div class=\\\"col-md-3\\\">\\r\\n            <h5 *ngIf=\\\"isLoggedOn\\\">Vanakkam {{userName}}</h5>\\r\\n            <p *ngIf=\\\"!isLoggedOn\\\" class=\\\"paraStyle\\\">\\r\\n                Welcome to <strong>{{appTitle}}</strong>. Once you are authenticated, You can enter your weekly attendance for your class in \\\"Attendance\\\" page. Term scores can be entered in \\\"Term Scores\\\" page. Contact system administrator to get access.\\r\\n            </p>\\r\\n            <p *ngIf=\\\"isLoggedOn\\\" class=\\\"paraStyle\\\">\\r\\n                Welcome to <strong>{{appTitle}}</strong>. You can enter your weekly attendance for your class in \\\"Attendance\\\" page. Term scores can be entered in \\\"Term Scores\\\" page. \\r\\n            </p>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n           <div id=\\\"carouselExampleIndicators\\\" class=\\\"carousel slide\\\" data-ride=\\\"carousel\\\" data-interval=\\\"3000\\\">\\r\\n                <ol class=\\\"carousel-indicators\\\">\\r\\n                    <li data-target=\\\"#carouselExampleIndicators\\\" data-slide-to=\\\"0\\\" class=\\\"active\\\"></li>\\r\\n                    <li data-target=\\\"#carouselExampleIndicators\\\" data-slide-to=\\\"1\\\" ></li>\\r\\n                    <li data-target=\\\"#carouselExampleIndicators\\\" data-slide-to=\\\"2\\\" ></li>\\r\\n                    <li data-target=\\\"#carouselExampleIndicators\\\" data-slide-to=\\\"3\\\" ></li>\\r\\n                    <li data-target=\\\"#carouselExampleIndicators\\\" data-slide-to=\\\"4\\\" ></li>\\r\\n                </ol>\\r\\n                <div class=\\\"carousel-inner\\\">\\r\\n                    <div class=\\\"carousel-item active\\\" >\\r\\n                        <img class=\\\"d-block w90p\\\" src=\\\"/img/Carousel-1.jpg\\\" alt=\\\"First\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"carousel-item \\\" >\\r\\n                        <img class=\\\"d-block w90p\\\" src=\\\"/img/Carousel-2.jpg\\\" alt=\\\"Second\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"carousel-item \\\">\\r\\n                        <img class=\\\"d-block w90p\\\" src=\\\"/img/Carousel-3.jpg\\\" alt=\\\"Third\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"carousel-item \\\">\\r\\n                        <img class=\\\"d-block w90p\\\" src=\\\"/img/Carousel-4.jpg\\\" alt=\\\"Fourth\\\">\\r\\n                    </div>\\r\\n                    <div class=\\\"carousel-item \\\">\\r\\n                        <img class=\\\"d-block w90p\\\" src=\\\"/img/Carousel-5.jpg\\\" alt=\\\"Fifth\\\">\\r\\n                    </div>\\r\\n                </div>\\r\\n                <a class=\\\"carousel-control-prev\\\" href=\\\"#carouselExampleIndicators\\\" role=\\\"button\\\" data-slide=\\\"prev\\\">\\r\\n                    <span class=\\\"carousel-control-prev-icon\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                    <span class=\\\"sr-only\\\">Previous</span>\\r\\n                </a>\\r\\n                <a class=\\\"carousel-control-next\\\" href=\\\"#carouselExampleIndicators\\\" role=\\\"button\\\" data-slide=\\\"next\\\">\\r\\n                    <span class=\\\"carousel-control-next-icon\\\" aria-hidden=\\\"true\\\"></span>\\r\\n                    <span class=\\\"sr-only\\\">Next</span>\\r\\n                </a>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-3\\\" >\\r\\n            <p class=\\\"paraStyle\\\">\\r\\n                More features are coming soon. Stay tuned!\\r\\n            </p>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","module.exports = \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"jumbotron\\\">\\r\\n        <h2 style=\\\"color:darkred\\\">Session Expired or You have logged out !</h2>\\r\\n        <div>Please <button id=\\\"btnLogin\\\" type=\\\"reset\\\" class=\\\"btn btn-success btn-sm\\\" (click)=\\\"loginClick()\\\"><i class=\\\"fa fa-unlock\\\" aria-hidden=\\\"true\\\"></i> login</button> to access requested Page or\\r\\n        Click <button id=\\\"btnCancel\\\" type=\\\"reset\\\" class=\\\"btn btn-primary btn-sm\\\" (click)=\\\"homeClick()\\\"><i class=\\\"fa fa-home\\\" aria-hidden=\\\"true\\\"></i> here</button> to navigate to Home Page !</div>\\r\\n    </div>\\r\\n</div>\"","﻿import { Component, OnInit, PACKAGE_ROOT_URL } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/AuthService';\r\nimport { LoggerService } from '../../services/LoggerService';\r\n\r\n@Component({\r\n    templateUrl: './loggedOut.html'\r\n})\r\nexport class LoggedOutComponent implements OnInit {\r\n    constructor(private _router: Router) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    loginClick() {\r\n        window.location.href = \"/logon/login\";\r\n    }\r\n\r\n    homeClick() {\r\n        this._router.navigate([\"home\"]);\r\n    }\r\n}","﻿import { Component, OnInit } from '@angular/core'\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../../services/AuthService';\r\nimport { Observable } from 'rxjs';\r\nimport { Term } from '../../model/Term';\r\nimport { LoggerService } from '../../services/LoggerService';\r\nimport { GradeService } from '../../services/GradeService';\r\nimport { Grade } from '../../model/Grade';\r\nimport { CalendarService } from '../../services/CalendarService';\r\nimport { CalendarWeek } from '../../model/CalendarWeek';\r\nimport { TeacherService } from '../../services/TeacherService';\r\nimport { Teacher } from '../../model/Teacher';\r\n//import { StudentTestScore } from '../../model/StudentTestScore';\r\nimport { StudentTermScore } from '../../model/StudentTermScore';\r\n//import { transformAll } from '@angular/compiler/src/render3/r3_ast';\r\nimport { StudentService } from '../../services/StudentService';\r\nimport { fail } from 'assert';\r\n\r\n@Component({\r\n    templateUrl: './scores.html'\r\n})\r\nexport class ScoresComponent implements OnInit {\r\n    isLoggedOn: boolean;\r\n\r\n    Terms: Array<Term> = new Array<Term>();\r\n    selectedTermWeekId: number;\r\n    selectedGrade: string;\r\n    selectedGradeLevel: string;\r\n    selectedTeacherId: number;\r\n    selectedTermNo: number;\r\n\tCalendarWeeks: CalendarWeek[];\r\n    Grades: Grade[];\r\n\tTeachers : Teacher[];\r\n\r\n\tisSelectTermLoading:boolean;\r\n\ttermLoadError : string;\r\n\tisSelectGradeLoading: boolean;\r\n\tgradeLoadError: string;\r\n\tisSelectTeacherLoading : boolean;\r\n\tteacherLoadError :string;\r\n\r\n    selectGradeEnabled: boolean;\r\n    selectTeachedEnabled: boolean;\r\n\r\n    isStudentTermScoreGridLoading : boolean;\r\n    studentGridServerErrorMessage : string;\r\n\t//StudentTestScores : Array<StudentTestScore> = new Array<StudentTestScore>();\r\n    StudentTermScores: StudentTermScore[];\r\n    studentTermScoreDataFreeze: boolean;\r\n    studentTermScoreEntryAllowed: boolean;\r\n    studentGridServerWarningMessage: string;\r\n\r\n    showL1Grid: boolean;\r\n    showL2Grid: boolean;\r\n    showL3Grid: boolean;\r\n    \r\n\r\n\r\n    studentGridServerSuccessMessage: string;\r\n    isGridSaving: boolean;\r\n\r\n    gradeSelectionAllowed: boolean;\r\n    teacherSelectionAllowed: boolean;\r\n\r\n    constructor(private _authService: AuthService,\r\n\t\tprivate _calendarService: CalendarService,\r\n        private _gradeService: GradeService,\r\n        private _teacherService: TeacherService,\r\n        private _studentService: StudentService,\r\n        private _loggerService: LoggerService,\r\n        private _router: Router) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.isLoggedOn = this._authService.getIsLoggedOn();\r\n        if (this.isLoggedOn == false) {\r\n            //window.location.href = \"/logon/login\";\r\n            this._loggerService.log(\"Not logged in\");\r\n            this._router.navigate([\"loggedOut\"]);\r\n            return;\r\n        }\r\n\r\n        this._authService.hasAccess(\"TermScores\")\r\n            .then((x) => {\r\n                if (x == false) {\r\n                    this._loggerService.log(\"Unauthorized access\");\r\n                    this._router.navigate([\"accessDenied\"]);\r\n                }\r\n            }); \r\n\r\n\t\tthis.isSelectTermLoading = false;\r\n\t\tthis.termLoadError = \"\";\r\n\t\tthis.isSelectGradeLoading = false;\r\n\t\tthis.gradeLoadError = \"\";\r\n\t\tthis.isSelectTeacherLoading= false;\r\n\t\tthis.teacherLoadError = \"\";\r\n\r\n\t\tthis.selectedTermWeekId = 0;\r\n        this.selectedGrade = \"0\";\r\n        this.selectedGradeLevel = \"\";\r\n        this.selectedTeacherId = 0;\r\n        this.selectedTermNo = 0;\r\n\r\n        this.isStudentTermScoreGridLoading = false;\r\n        this.studentGridServerErrorMessage = \"\";\r\n\r\n        this.selectGradeEnabled = true;\r\n        this.selectTeachedEnabled = true;\r\n\r\n        this.studentGridServerSuccessMessage = \"\";\r\n        this.isGridSaving = false;\r\n\r\n        this.showL1Grid = false;\r\n        this.showL2Grid = false;\r\n        this.showL3Grid = false;\r\n\r\n        this.studentTermScoreDataFreeze = false;\r\n        this.studentTermScoreEntryAllowed = true;\r\n\r\n        this.populateTerms();\r\n\r\n        this.gradeSelectionAllowed = false;\r\n        this.teacherSelectionAllowed = false;\r\n\r\n        this._authService.hasAccess(\"TermScores.GradeSelection\").then((x) => {\r\n            this.gradeSelectionAllowed = x;\r\n            if (this.gradeSelectionAllowed == true) {\r\n                this.populateGrades();\r\n            }\r\n            else {\r\n                this.populateGradeAndTeacherDetails();\r\n            }\r\n        });\r\n\r\n        this._authService.hasAccess(\"TermScores.TeacherSelection\").then((x) => {\r\n            this.teacherSelectionAllowed = x;\r\n        });\r\n    }\r\n\r\n\r\n    onSelectTerm(value: any) {\r\n        this.selectedTermWeekId = value;\r\n        if (this.gradeSelectionAllowed == true) {\r\n            this.selectedGrade = \"0\";\r\n            this.selectedTeacherId = 0;\r\n            this.Teachers = null;\r\n        }\r\n        else {\r\n            this.populateGradeAndTeacherDetails();\r\n        }\r\n        this.displayScoreGrid();\r\n    }\r\n\r\n    onSelectGrade(value: any) {\r\n        this.selectedGrade = value;\r\n        if (value != \"0\") {\r\n            var selectedGrade = this.Grades.find(x => x.ctsGrade == value);\r\n            this.selectedGradeLevel = selectedGrade.gradeLevel;\r\n        }\r\n\r\n        if (this.teacherSelectionAllowed == true) {\r\n            if (this.selectedGrade != \"0\" && this.selectedTermWeekId != 0) {\r\n                this.populateTeachers();\r\n            }\r\n        }\r\n    }\r\n\r\n\tonSelectTeacher(value:any){\r\n\t\tthis.selectedTeacherId = value;\r\n        this.displayScoreGrid();\r\n\t}\r\n\r\n\r\n    populateTerms() {\r\n\t\tthis.isSelectTermLoading = true;\r\n\t\tthis.termLoadError = \"\";\r\n        this._calendarService.getCalendarTestWeeks()\r\n            .subscribe(result => {\r\n\t\t\t\tthis.isSelectTermLoading = false;\r\n                this.CalendarWeeks = result;\r\n            },\r\n            err => {\r\n\t\t\t\tthis.isSelectTermLoading = false;\r\n                this._loggerService.log(\"Error occurred : Code=\" + err.status + \",Error=\"+err.statusText);\r\n\t\t\t\tif ( err.status == \"404\")\r\n\t\t\t\t{\r\n\t\t\t\t\t// data not found\r\n\t\t\t\t\tthis.CalendarWeeks = null;\r\n\t\t\t\t}\r\n\t\t\t\tthis.termLoadError = \"Error Occured\";\r\n            });\r\n    }\r\n\r\n\r\n    populateGrades() {\r\n        this.isSelectGradeLoading = true;\r\n        this.gradeLoadError = \"\";\r\n        this._gradeService.getScoringGrades()\r\n            .subscribe(result => {\r\n                this.isSelectGradeLoading = false;\r\n                this.Grades = result;\r\n            },\r\n            err => {\r\n                this.isSelectGradeLoading = false;\r\n                this._loggerService.log(\"Error occurred : Code=\" + err.status + \",Error=\" + err.statusText);\r\n                if (err.status == \"404\") {\r\n                    // data not found\r\n                    this.Grades = null;\r\n                }\r\n                this.gradeLoadError = \"Error Occured\";\r\n            });\r\n    }\r\n\r\n\tpopulateTeachers(){\r\n\t\tthis.isSelectTeacherLoading = true;\r\n\t\tthis.teacherLoadError = \"\";\r\n        this._teacherService.getAssignedTeacherByGradeAndWeek(this.selectedGrade, this.selectedTermWeekId)\r\n            .subscribe(result => {\r\n\t\t\t\tthis.isSelectTeacherLoading = false;\r\n                this.Teachers = result;\r\n            },\r\n            err => {\r\n\t\t\t\tthis.isSelectTeacherLoading = false;\r\n\t\t\t\tthis._loggerService.log(\"Error occurred : Code=\" + err.status + \",Error=\"+err.statusText);\r\n\t\t\t\tif ( err.status == \"404\")\r\n\t\t\t\t{\r\n\t\t\t\t\t// data not found\r\n\t\t\t\t\tthis.Teachers = null;\r\n\t\t\t\t\tthis.teacherLoadError = \"Error Occured\";\r\n\t\t\t\t}\r\n            });\r\n    }\r\n\r\n    populateGradeAndTeacherDetails() {\r\n        if (this.selectedTermWeekId != 0) {\r\n            this._teacherService.getAssignedTeacherByWeek(this.selectedTermWeekId)\r\n                .subscribe(result => {\r\n                    this.isSelectTeacherLoading = false;\r\n                    this.Teachers = result;\r\n\r\n                    //populate grade from result\r\n                    let gr: Array<Grade> = new Array<Grade>();\r\n                    gr.push(new Grade(this.Teachers[0].ctsGrade, this.Teachers[0].ctsGrade, this.Teachers[0].gradeLevel));\r\n                    this.Grades = gr;\r\n                    this.selectedGrade = this.Teachers[0].ctsGrade;\r\n                    this.selectedGradeLevel = this.Teachers[0].gradeLevel;\r\n                    this.selectGradeEnabled = false;\r\n\r\n                    if (this.Teachers.length > 1) {\r\n                        this.selectedTeacherId = 0;\r\n                    } else {\r\n                        this.selectedTeacherId = this.Teachers[0].id;\r\n                        this.selectTeachedEnabled = false;\r\n                        this.displayScoreGrid();\r\n                    }\r\n                },\r\n                    err => {\r\n                        this.isSelectTeacherLoading = false;\r\n                        this._loggerService.log(\"Error occurred : Code=\" + err.status + \",Error=\" + err.statusText);\r\n                        if (err.status == \"401\" || err.status == \"403\") {\r\n                            this.studentGridServerErrorMessage = \"UnAuthorized/Forbidden access or Session Expired. Please log out and login back to access the system.\"\r\n                        }\r\n                        else {\r\n                            this.studentGridServerErrorMessage = \"Error Occured while retrieving information : \" + err.status + \". Please try later or contact system administrator\";\r\n                        }\r\n                    });\r\n        }\r\n    }\r\n\r\n    displayScoreGrid() {\r\n        this.studentGridServerSuccessMessage = \"\";\r\n\r\n        let cw = this.CalendarWeeks.find(x => x.id == this.selectedTermWeekId);\r\n        this.selectedTermNo = cw.termNo;\r\n\r\n        if (this.selectedTermNo != 0 && this.selectedTeacherId != 0) {\r\n            this.studentGridServerErrorMessage = \"\";\r\n            this.studentGridServerWarningMessage = \"\";\r\n            if (this.selectedGradeLevel == \"L1\") {\r\n                this.showL2Grid = false;\r\n                this.showL3Grid = false;\r\n                this.populateL1Grid();\r\n            }\r\n            else if (this.selectedGradeLevel == \"L2\") {\r\n                this.showL1Grid = false;\r\n                this.showL3Grid = false;\r\n                this.populateL2Grid();\r\n            }\r\n            else if (this.selectedGradeLevel == \"L3\") {\r\n                this.showL1Grid = false;\r\n                this.showL2Grid = false;\r\n                this.populateL3Grid();\r\n            }\r\n        }\r\n        else {\r\n            this.showL1Grid = false;\r\n            this.showL2Grid = false;\r\n            this.showL3Grid = false;\r\n        }\r\n    }\r\n\r\n    populateL1Grid() {\r\n    }\r\n\r\n    populateL2Grid() {\r\n        this.showL2Grid = false;\r\n        if (this.selectedTermWeekId != 0 && this.selectedGrade != \"0\" && this.selectedTeacherId != 0) {\r\n            this.isStudentTermScoreGridLoading = true;\r\n            this.studentGridServerErrorMessage = \"\";\r\n            this.studentGridServerSuccessMessage = \"\";\r\n            this.studentGridServerWarningMessage = \"\";\r\n            this.studentTermScoreDataFreeze = false;\r\n            this.studentTermScoreEntryAllowed = true;\r\n            //console.log('selectedTermWeekId = ' + this.selectedTermWeekId);\r\n            let cw = this.CalendarWeeks.find(x => x.id == this.selectedTermWeekId);\r\n            this.selectedTermNo = cw.termNo;\r\n            //console.log('termNo = ' + termNo);\r\n            this._teacherService.getStudentTermScores(this.selectedTeacherId, this.selectedGradeLevel, this.selectedTermNo, this.selectedTermWeekId)\r\n                .subscribe(result => {\r\n                    this.isStudentTermScoreGridLoading = false;\r\n                    this.StudentTermScores = result.studentTermScores;\r\n                    if (this.StudentTermScores != null) {\r\n                        this.studentTermScoreDataFreeze = result.dataFreeze;\r\n                        this.studentTermScoreEntryAllowed = result.termScoreEntryAllowed;\r\n                        this.showL2Grid = true;\r\n                        if (this.studentTermScoreDataFreeze == true || this.studentTermScoreEntryAllowed == false) {\r\n                            this.studentGridServerWarningMessage = \"Term Score entry is not allowed !\";\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.studentGridServerWarningMessage = \"No attendance score found to generate average scores.\";\r\n                    }\r\n                },\r\n                    err => {\r\n                        this.isStudentTermScoreGridLoading = false;\r\n                        this._loggerService.log(\"Error occurred : Code=\" + err.status + \",Error=\" + err.statusText);\r\n                        this.StudentTermScores = null;\r\n                        if (err.status == \"401\" || err.status == \"403\") {\r\n                            this.studentGridServerErrorMessage = \"UnAuthorized/Forbidden access or Session Expired. Please log out and login back to access the system.\"\r\n                        }\r\n                        else {\r\n                            this.studentGridServerErrorMessage = \"Error Occured while retrieving information : \" + err.status + \". Please try later or contact system administrator\";\r\n                        }\r\n\r\n                    });\r\n        }\r\n    }\r\n\r\n    populateL3Grid() {\r\n        this.showL3Grid = false;\r\n        if (this.selectedTermWeekId != 0 && this.selectedGrade != \"0\" && this.selectedTeacherId != 0) {\r\n            this.isStudentTermScoreGridLoading = true;\r\n            this.studentGridServerErrorMessage = \"\";\r\n            this.studentGridServerSuccessMessage = \"\";\r\n            this.studentGridServerWarningMessage = \"\";\r\n            this.studentTermScoreDataFreeze = false;\r\n            this.studentTermScoreEntryAllowed = true;\r\n            //console.log('selectedTermWeekId = ' + this.selectedTermWeekId);\r\n            let cw = this.CalendarWeeks.find(x => x.id == this.selectedTermWeekId);\r\n            this.selectedTermNo = cw.termNo;\r\n            //console.log('termNo = ' + termNo);\r\n            this._teacherService.getStudentTermScores(this.selectedTeacherId, this.selectedGradeLevel ,this.selectedTermNo, this.selectedTermWeekId)\r\n                .subscribe(result => {\r\n                    this.isStudentTermScoreGridLoading = false;\r\n                    this.StudentTermScores = result.studentTermScores;\r\n                    if (this.StudentTermScores != null) {\r\n                        this.studentTermScoreDataFreeze = result.dataFreeze;\r\n                        this.studentTermScoreEntryAllowed = result.termScoreEntryAllowed;\r\n                        this.showL3Grid = true;\r\n                        if (this.studentTermScoreDataFreeze == true || this.studentTermScoreEntryAllowed == false) {\r\n                            this.studentGridServerWarningMessage = \"Term Score entry is not allowed !\";\r\n                        }\r\n                    }\r\n                    else {\r\n                        this.studentGridServerWarningMessage = \"No attendance score found to generate average scores.\";\r\n                    }\r\n                },\r\n                err => {\r\n                    this.isStudentTermScoreGridLoading = false;\r\n                    this._loggerService.log(\"Error occurred : Code=\" + err.status + \",Error=\" + err.statusText);\r\n                    this.StudentTermScores = null;\r\n                    if (err.status == \"401\" || err.status == \"403\") {\r\n                        this.studentGridServerErrorMessage = \"UnAuthorized/Forbidden access or Session Expired. Please log out and login back to access the system.\"\r\n                    }\r\n                    else {\r\n                        this.studentGridServerErrorMessage = \"Error Occured while retrieving information : \" + err.status + \". Please try later or contact system administrator\";\r\n                    }\r\n\r\n                });\r\n        }\r\n        \r\n    }\r\n\r\n    cancelClick() {\r\n        this.showL3Grid = false;\r\n        this.studentGridServerSuccessMessage = \"\";\r\n        this.studentGridServerErrorMessage = \"\";\r\n        this.studentGridServerWarningMessage = \"\";\r\n        this.StudentTermScores = null;\r\n        this.selectedTeacherId = 0;\r\n    }\r\n\r\n    saveClick() {\r\n        this.isGridSaving = true;\r\n        this.studentGridServerErrorMessage = \"\";\r\n        this.studentGridServerSuccessMessage = \"\";\r\n        this.studentGridServerWarningMessage = \"\";\r\n\r\n        // Set selected TermNo for all records\r\n        this.StudentTermScores.forEach((x) => {\r\n            x.termNo = this.selectedTermNo;\r\n        });\r\n\r\n        this._studentService.saveStudentTestScores(this.selectedGradeLevel, this.StudentTermScores)\r\n            .subscribe(result => {\r\n                this.isGridSaving = false;\r\n                this.studentGridServerSuccessMessage = \"Student Term Scores saved successfully !\";\r\n            },\r\n                err => {\r\n                    this.isGridSaving = false;\r\n                    this.studentGridServerSuccessMessage = \"\";\r\n                    this._loggerService.log(\"Error occurred : Code=\" + err.status + \",Error=\" + err.statusText);\r\n                    if (err.status == \"401\" || err.status == \"403\") {\r\n                        this.studentGridServerErrorMessage = \"UnAuthorized/Forbidden access or Session Expired. Please log out and login back to access the system.\"\r\n                    }\r\n                    else {\r\n                        this.studentGridServerErrorMessage = \"Error Occured while retrieving information : \" + err.status + \". Please try later or contact system administrator.\";\r\n                    }\r\n\r\n                });\r\n\r\n    }\r\n\r\n}\r\n","module.exports = \"<header class=\\\"container-fluid p0\\\">\\r\\n    <nav class=\\\"navbar navbar-light navbar-expand-md bgcolorMenu\\\">\\r\\n        <div class=\\\"row \\\">\\r\\n            <button class=\\\"navbar-toggler\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#menuBar\\\">\\r\\n                <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n            </button>\\r\\n            <div id=\\\"menuBar\\\" class=\\\"navbar-collapse collapse\\\">\\r\\n                <ul class=\\\"navbar-nav\\\">\\r\\n                    <li class=\\\"nav-item\\\"><a class=\\\"nav-link py-0\\\" routerLink=\\\"/home\\\">Home</a></li>\\r\\n                    <li *ngIf=\\\"isLoggedOn\\\" class=\\\"nav-item\\\"><a class=\\\"nav-link py-0\\\" routerLink=\\\"/attendance\\\">Attendance</a></li>\\r\\n                    <li *ngIf=\\\"isLoggedOn\\\" class=\\\"nav-item active\\\"><a class=\\\"nav-link py-0\\\" routerLink=\\\"/scores\\\">Test Scores</a></li>\\r\\n                    <!--<li class=\\\"nav-item\\\"><a class=\\\"nav-link py-0\\\" routerLink=\\\"/contactus\\\">Contact Us</a></li>\\r\\n    <li class=\\\"nav-item\\\"><a class=\\\"nav-link py-0\\\">About Us</a></li>-->\\r\\n                </ul>\\r\\n            </div>\\r\\n        </div>\\r\\n    </nav>\\r\\n\\r\\n</header>\\r\\n<div class=\\\"container p0 mt10\\\">\\r\\n    <!--<h4 class=\\\"text-center\\\">{{pageTitle}}</h4>-->\\r\\n\\r\\n    <div class=\\\"row bgBar br5 m5 p5\\\">\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <div class=\\\"input-group\\\">\\r\\n                <label for=\\\"selectTerm\\\" class=\\\"mt5\\\">Term</label>\\r\\n                <img *ngIf=\\\"isSelectTermLoading\\\" src=\\\"/img/Loading.gif\\\" height=\\\"40\\\" width=\\\"40\\\" class=\\\"ml10\\\" />\\r\\n                <i *ngIf=\\\"termLoadError\\\" class=\\\"fa fa-exclamation-triangle form-control errorText\\\"> {{termLoadError}}</i>\\r\\n                <select *ngIf=\\\"!isSelectTermLoading && !termLoadError\\\" name=\\\"selectTerm\\\" class=\\\"ml10 selectpicker form-control selectWidth\\\" (change)=\\\"onSelectTerm($event.target.value)\\\">\\r\\n                    <option value=\\\"0\\\">--Select Term--</option>\\r\\n                    <option *ngFor=\\\"let week of CalendarWeeks\\\" value={{week.id}}>\\r\\n                        {{week.description}}\\r\\n                    </option>\\r\\n                </select>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <div class=\\\"input-group\\\">\\r\\n                <label for=\\\"selectGrade\\\" class=\\\"mt5\\\">Grade</label>\\r\\n                <img *ngIf=\\\"isSelectGradeLoading\\\" src=\\\"/img/Loading.gif\\\" height=\\\"40\\\" width=\\\"40\\\" class=\\\"ml10\\\" />\\r\\n                <i *ngIf=\\\"gradeLoadError\\\" class=\\\"fa fa-exclamation-triangle form-control errorText\\\"> {{gradeLoadError}}</i>\\r\\n                <select *ngIf=\\\"!isSelectGradeLoading && !gradeLoadError\\\" name=\\\"selectGrade\\\" class=\\\"ml10 selectpicker form-control selectWidth\\\"\\r\\n                        (change)=\\\"onSelectGrade($event.target.value)\\\" [(ngModel)]=\\\"selectedGrade\\\" [disabled]=\\\"!selectGradeEnabled\\\">\\r\\n                    <option value=\\\"0\\\">--Select Grade--</option>\\r\\n                    <option *ngFor=\\\"let grade of Grades\\\" value={{grade.ctsGrade}}>\\r\\n                        {{grade.ctsGrade}}\\r\\n                    </option>\\r\\n                </select>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\">\\r\\n            <div class=\\\"input-group\\\">\\r\\n                <label for=\\\"selectTeacher\\\" class=\\\"mt5\\\">Teacher</label>\\r\\n                <img *ngIf=\\\"isSelectTeacherLoading\\\" src=\\\"/img/Loading.gif\\\" height=\\\"40\\\" width=\\\"40\\\" class=\\\"ml10\\\" />\\r\\n                <i *ngIf=\\\"teacherLoadError\\\" class=\\\"fa fa-exclamation-triangle form-control errorText\\\"> {{teacherLoadError}}</i>\\r\\n                <select *ngIf=\\\"!isSelectTeacherLoading && !teacherLoadError\\\" name=\\\"selectTeacher\\\" class=\\\"ml10 selectpicker form-control selectWidth\\\"\\r\\n                        (change)=\\\"onSelectTeacher($event.target.value)\\\" [(ngModel)]=\\\"selectedTeacherId\\\" [disabled]=\\\"!selectTeachedEnabled\\\">\\r\\n                    <option value=\\\"0\\\">--Select Teacher--</option>\\r\\n                    <option *ngFor=\\\"let teacher of Teachers\\\" value={{teacher.id}}>\\r\\n                        {{teacher.firstName}} {{teacher.lastName}}\\r\\n                    </option>\\r\\n                </select>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"row\\\">\\r\\n        <div *ngIf=\\\"isStudentTermScoreGridLoading\\\" class=\\\"col-md-12\\\">Loading Student Term Scores. Please wait.<img src=\\\"/img/Loading.gif\\\" height=\\\"40\\\" width=\\\"40\\\" class=\\\"ml10\\\" /></div>\\r\\n        <div *ngIf=\\\"studentGridServerWarningMessage\\\" class=\\\"col-md-12 mt10 ml10 errorText\\\"><i class=\\\"fa fa-exclamation-triangle\\\"></i> {{studentGridServerWarningMessage}} </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"showL2Grid\\\">\\r\\n        <div class=\\\"col-md-12\\\" id=\\\"no-more-tables\\\">\\r\\n            <table class=\\\"table-bordered table-condensed cf\\\" id=\\\"dev-table\\\">\\r\\n                <thead class=\\\"bgTableHead cf\\\">\\r\\n                    <tr>\\r\\n                        <th class=\\\"fw\\\">ID</th>\\r\\n                        <th class=\\\"fw w150\\\">First Name</th>\\r\\n                        <th class=\\\"fw w150\\\">Last Name</th>\\r\\n                        <th class=\\\"fw\\\">Attendance</th>\\r\\n                        <th class=\\\"fw\\\">Homework</th>\\r\\n                        <th class=\\\"fw\\\">Behaviour</th>\\r\\n                        <th class=\\\"fw\\\">Participation</th>\\r\\n                        <th class=\\\"fw\\\">Internal Score</th>\\r\\n                        <th class=\\\"fw w60\\\">Test Score</th>\\r\\n                        <th class=\\\"fw\\\">Total Score</th>\\r\\n                        <th class=\\\"fw w200\\\">Notes</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let testScore of StudentTermScores\\\">\\r\\n                        <td data-title=\\\"ID\\\">{{testScore.studentID}}</td>\\r\\n                        <td data-title=\\\"First Name\\\">{{testScore.firstName}}</td>\\r\\n                        <td data-title=\\\"Last Name\\\">{{testScore.lastName}}</td>\\r\\n                        <td data-title=\\\"Attendance\\\">{{testScore.attendance}}</td>\\r\\n                        <td data-title=\\\"Homework\\\">{{testScore.homework}}</td>\\r\\n                        <td data-title=\\\"Behavior\\\">{{testScore.behavior}}</td>\\r\\n                        <td data-title=\\\"Participation\\\">{{testScore.participation}}</td>\\r\\n                        <td data-title=\\\"Internal\\\">{{testScore.internalScore}}</td>\\r\\n                        <td data-title=\\\"Test Score\\\">\\r\\n                            <input class=\\\"form-control\\\" [(ngModel)]=\\\"testScore.termScore\\\" value=\\\"{{testScore.termScore}}\\\" *ngIf=\\\"studentTermScoreEntryAllowed\\\" maxlength=\\\"3\\\" />\\r\\n                            <span *ngIf=\\\"!studentTermScoreEntryAllowed\\\">{{testScore.termScore}}</span>\\r\\n                        </td>\\r\\n                        <td data-title=\\\"Total Score\\\">{{(testScore.internalScore-0) + ((testScore.termScore-0)/2)}}</td>\\r\\n                        <td data-title=\\\"Notes\\\">\\r\\n                            <textarea class=\\\"form-control rounded-3\\\" rows=\\\"1\\\" [(ngModel)]=\\\"testScore.notes\\\" maxlength=\\\"100\\\" *ngIf=\\\"studentTermScoreEntryAllowed\\\">{{testScore.notes}}</textarea>\\r\\n                            <span *ngIf=\\\"!studentTermScoreEntryAllowed\\\">{{testScore.notes}}</span>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n\\r\\n\\r\\n    <div class=\\\"row\\\" *ngIf=\\\"showL3Grid\\\">\\r\\n        <div class=\\\"col-md-12\\\" id=\\\"no-more-tables\\\">\\r\\n            <table class=\\\"table-bordered table-condensed cf\\\" id=\\\"dev-table\\\">\\r\\n                <thead class=\\\"bgTableHead cf\\\">\\r\\n                    <tr>\\r\\n                        <th class=\\\"fw\\\">ID</th>\\r\\n                        <th class=\\\"fw w150\\\">First Name</th>\\r\\n                        <th class=\\\"fw w150\\\">Last Name</th>\\r\\n                        <th class=\\\"fw\\\">Attendance</th>\\r\\n                        <th class=\\\"fw\\\">Homework</th>\\r\\n                        <th class=\\\"fw\\\">Reading</th>\\r\\n                        <th class=\\\"fw\\\">Writing</th>\\r\\n                        <th class=\\\"fw\\\">Speaking</th>\\r\\n                        <th class=\\\"fw\\\">Behaviour</th>\\r\\n                        <th class=\\\"fw\\\">Quiz</th>\\r\\n                        <th class=\\\"fw\\\">Internal</th>\\r\\n                        <th class=\\\"fw w60\\\">Test Score</th>\\r\\n                        <th class=\\\"fw\\\">Total Score</th>\\r\\n                        <th class=\\\"fw w200\\\">Notes</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let testScore of StudentTermScores\\\">\\r\\n                        <td data-title=\\\"ID\\\">{{testScore.studentID}}</td>\\r\\n                        <td data-title=\\\"First Name\\\">{{testScore.firstName}}</td>\\r\\n                        <td data-title=\\\"Last Name\\\">{{testScore.lastName}}</td>\\r\\n                        <td data-title=\\\"Attendance\\\">{{testScore.attendance}}</td>\\r\\n                        <td data-title=\\\"Homework\\\">{{testScore.homework}}</td>\\r\\n                        <td data-title=\\\"Reading\\\">{{testScore.reading}}</td>\\r\\n                        <td data-title=\\\"Writing\\\">{{testScore.writing}}</td>\\r\\n                        <td data-title=\\\"Speaking\\\">{{testScore.speaking}}</td>\\r\\n                        <td data-title=\\\"Behavior\\\">{{testScore.behavior}}</td>\\r\\n                        <td data-title=\\\"Quiz\\\">{{testScore.quiz}}</td>\\r\\n                        <td data-title=\\\"Internal\\\">{{testScore.internalScore}}</td>\\r\\n                        <td data-title=\\\"Test Score\\\">\\r\\n                            <input class=\\\"form-control\\\" [(ngModel)]=\\\"testScore.termScore\\\" value=\\\"{{testScore.termScore}}\\\" *ngIf=\\\"studentTermScoreEntryAllowed\\\" maxlength=\\\"3\\\" />\\r\\n                            <span *ngIf=\\\"!studentTermScoreEntryAllowed\\\">{{testScore.termScore}}</span>\\r\\n                        </td>\\r\\n                        <td data-title=\\\"Total Score\\\">{{(testScore.internalScore-0) + ((testScore.termScore-0)/2)}}</td>\\r\\n                        <td data-title=\\\"Notes\\\">\\r\\n                            <textarea class=\\\"form-control rounded-3\\\" rows=\\\"1\\\" [(ngModel)]=\\\"testScore.notes\\\" maxlength=\\\"100\\\" *ngIf=\\\"studentTermScoreEntryAllowed\\\">{{testScore.notes}}</textarea>\\r\\n                            <span *ngIf=\\\"!studentTermScoreEntryAllowed\\\">{{testScore.notes}}</span>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div *ngIf=\\\"studentGridServerErrorMessage\\\" class=\\\"col-md-12 mt10 ml10 errorText\\\"><i class=\\\"fa fa-exclamation-triangle\\\"></i> {{studentGridServerErrorMessage}} </div>\\r\\n        <div *ngIf=\\\"studentGridServerSuccessMessage\\\" class=\\\"col-md-12 mt10 ml10 successText\\\"><i class=\\\"fa fa-check-circle\\\"></i>  {{studentGridServerSuccessMessage}}</div>\\r\\n    </div>\\r\\n    <div class=\\\"row bgBar br5 m5 p5\\\" *ngIf=\\\"isGridSaving\\\">\\r\\n        <div class=\\\"col-md-12\\\">Saving Student Term Scores. Please wait.<img src=\\\"/img/Loading.gif\\\" height=\\\"40\\\" width=\\\"40\\\" class=\\\"ml10\\\" /></div>\\r\\n    </div>\\r\\n    <div class=\\\"row bgBar br5 m5 p5\\\" *ngIf=\\\"!isGridSaving && (showL1Grid || showL2Grid || showL3Grid)\\\">\\r\\n\\r\\n        <div class=\\\"col-md-4\\\"></div>\\r\\n        <div class=\\\"col-md-4 \\\">\\r\\n            <button class=\\\"btn btn-primary btn-sm\\\" type=\\\"button\\\" (click)=\\\"cancelClick()\\\"><strong><i class=\\\"fa fa-times-circle\\\"></i> Cancel</strong></button>\\r\\n            <button class=\\\"btn btn-primary btn-sm ml10\\\" (click)=\\\"saveClick()\\\" type=\\\"submit\\\" *ngIf=\\\"studentTermScoreEntryAllowed\\\"><strong><i class=\\\"fa fa-save\\\"></i> Save</strong></button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-4\\\"></div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n\"","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: true\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","﻿import {Injectable} from '@angular/core';\r\nimport {Observable} from 'rxjs';\r\nimport {HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpHeaders} from '@angular/common/http';\r\n\r\nimport {AuthService} from '../services/AuthService';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\tconstructor (private _authService: AuthService){\r\n\t\r\n\t}\r\n\r\n\tintercept(req:HttpRequest<any> , next: HttpHandler) : Observable<HttpEvent<any>>{\r\n\t\r\n\t\tlet authHeader = 'Bearer ' + this._authService.getAuthToken();\r\n\r\n\t\tconst headers = new HttpHeaders({\r\n\t\t\t'Authorization': authHeader\r\n\t\t});\r\n\r\n\t\tconst authReq = req.clone({headers});\r\n\t\treturn next.handle(authReq);\r\n\r\n\t}\r\n}","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n\r\n","﻿export class Grade {\r\n\r\n\r\n    ctsGrade: string;\r\n    countyGrade: string;\r\n    gradeLevel : string;\r\n\r\n    constructor(ctsGrade: string, countyGrade: string, gradeLevel:string) {\r\n        this.ctsGrade = ctsGrade;\r\n        this.countyGrade = countyGrade;\r\n        this.gradeLevel = gradeLevel;\r\n    }\r\n}","﻿import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\n\r\nimport {HomeComponent} from './components/home/Home';\r\nimport {AttendanceComponent} from './components/attendance/Attendance';\r\n//import { ContactComponent } from './components/contact/Contact';\r\nimport { ScoresComponent } from './components/score/Scores';\r\nimport { LoggedOutComponent } from './components/loggedOut/loggedOut';\r\nimport { AccessDeniedComponent } from './components/accessDenied/accessDenied';\r\n\r\n\r\nexport const AppRoutes = [\r\n\t{ path : \"\", redirectTo : 'home', pathMatch : 'full'},\r\n\t{ path : \"attendance\",component: AttendanceComponent},\r\n    { path: \"home\", component: HomeComponent },\r\n    { path: \"scores\", component: ScoresComponent },\r\n    { path: \"loggedOut\", component: LoggedOutComponent },\r\n    { path: \"accessDenied\", component: AccessDeniedComponent },\r\n    { path: \"**\", redirectTo: 'home', pathMatch: 'full' }\r\n    \r\n    // TODO: Session timed out or Unauthorized access\r\n\t//{ path : \"contactus\", component: ContactComponent}\r\n]\r\n\r\n@NgModule ({\r\n\timports : [RouterModule.forRoot(AppRoutes, {useHash : true, enableTracing : false })],\r\n\texports : [RouterModule]\r\n})\r\n\r\nexport class AppRoutingModule {\r\n\r\n}","﻿import {Injectable, OnInit} from '@angular/core';\r\nimport {Http, Response } from '@angular/http';\r\nimport {LoggerService} from './LoggerService';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { AuthFunctions } from '../model/AuthFunctions';\r\n\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\tstatic instance : AuthService;\r\n\tauthToken : string;\r\n\temail : string;\r\n\tuserName :string;\r\n\tisLoggedOn : boolean;\r\n    expiresBy: Date;\r\n    roles: string;\r\n    authFunctions: AuthFunctions;\r\n\r\n    constructor(private _loggerService: LoggerService,\r\n        private _http: HttpClient) {\r\n\t\tif ( AuthService.instance == null){\r\n\t\t\tAuthService.instance = this;\r\n\t\t}\r\n\t\treturn AuthService.instance;\r\n\t}\r\n\r\n\tsetAuthToken(token : string){\r\n\t\tthis.authToken = token;\r\n\t}\r\n\r\n\tgetAuthToken()\r\n\t{\r\n\t\treturn this.authToken;\r\n\t}\r\n\r\n\tsetEmail(email : string){\r\n\t\tthis.email = email;\r\n\t}\r\n\r\n\tgetEmail()\r\n\t{\r\n\t\treturn this.email;\r\n\t}\r\n\r\n\tsetUserName(userName : string){\r\n\t\tthis.userName = userName;\r\n\t}\r\n\r\n\tgetUserName()\r\n\t{\r\n\t\treturn this.userName;\r\n\t}\r\n\r\n\tgetIsLoggedOn() : boolean\r\n\t{\r\n\t\tif (this.authToken != null && this.authToken.length > 0 && this.expiresBy >= new Date())\r\n\t\t{\r\n\t\t\tthis._loggerService.log(\"getIsLoggedOn() = true\");\r\n\t\t\treturn true;\r\n\t\t}\r\n\t\tthis._loggerService.log(\"getIsLoggedOn() = false\");\r\n\t\treturn false;\r\n\t}\r\n\r\n\tsetExpiresBy(expiresBy: Date){\r\n\t\tthis.expiresBy = expiresBy;\r\n\t}\r\n\r\n\tgetExpiresBy(){\r\n\t\treturn this.expiresBy;\r\n    }\r\n\r\n\r\n    async hasAccess(fnName: string): Promise<boolean> {\r\n        let allowed = false;\r\n        if (this.authFunctions == null) {\r\n            await this.callAuthFunctionsService()\r\n                .then((result) => {\r\n                    this.authFunctions = result;\r\n\r\n                    if (this.authFunctions != null && this.authFunctions.functions != null && this.authFunctions.functions.length > 0) {\r\n                        var item = this.authFunctions.functions.find(x => x == fnName);\r\n                        if (item != null) {\r\n                            allowed = true;\r\n                        }\r\n                        return allowed;\r\n                    }\r\n                });\r\n        }\r\n        else {\r\n            if (this.authFunctions != null && this.authFunctions.functions != null && this.authFunctions.functions.length > 0) {\r\n                var item = this.authFunctions.functions.find(x => x == fnName);\r\n                if (item != null) {\r\n                    allowed = true;\r\n                }\r\n            }\r\n        }\r\n        return allowed;\r\n    }\r\n\r\n    async callAuthFunctionsService() {\r\n        if (this.authFunctions == null) {\r\n            let promise = new Promise < AuthFunctions>(() => {\r\n                this._http.get<AuthFunctions>('/api/ctsuser/authfunctions')\r\n                    .toPromise()\r\n            });\r\n            return promise;\r\n        }\r\n    }\r\n\r\n    getAuthFunctions() {\r\n        return this._http.get<AuthFunctions>('/api/ctsuser/authfunctions');\r\n    }\r\n}","﻿import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { CalendarWeek } from '../model/CalendarWeek';\r\n\r\n\r\n@Injectable()\r\nexport class CalendarService {\r\n    constructor(private _http:HttpClient) { }\r\n\r\n\r\n    getCalendarWeeks(){\r\n        return this._http.get<CalendarWeek[]>('/api/calendar/weeks');\r\n    }\r\n\r\n\tgetCalendarTestWeeks(){\r\n        return this._http.get<CalendarWeek[]>('/api/calendar/testweeks');\r\n    }\r\n}","﻿import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Grade } from '../model/Grade';\r\n\r\n\r\n@Injectable()\r\nexport class GradeService {\r\n    constructor(private _http: HttpClient) { }\r\n\r\n    \r\n\r\n    getGrades() {\r\n\r\n        return this._http.get<Grade[]>('/api/grade/grades');\r\n    }\r\n\r\n    getScoringGrades() {\r\n        return this._http.get<Grade[]>('/api/grade/scoringgrades');\r\n    }\r\n}","﻿import {Injectable} from '@angular/core';\r\nimport {environment} from '../environments/environment';\r\n\r\n@Injectable()\r\nexport class LoggerService {\r\n\tstatic instance : LoggerService;\r\n\r\n\tconstructor (){\r\n\t\tif ( LoggerService.instance == null ){\r\n\t\t\tLoggerService.instance = this;\r\n\t\t}\r\n\t\treturn LoggerService.instance;\r\n\t}\r\n\r\n\tlog(message : string){\r\n\t\tif ( ! environment.production){\r\n\t\t\tconsole.log(message);\r\n\t\t}\r\n\t}\r\n}\r\n","﻿import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { StudentWeekGrade } from '../model/StudentWeekGrade';\r\nimport { StudentTermScore } from '../model/StudentTermScore';\r\n\r\n\r\n@Injectable()\r\nexport class StudentService {\r\n    constructor(private _http:HttpClient) { }\r\n\r\n    saveStudentWeekGrades(gradeLevel : string, studentWeekGrades : StudentWeekGrade[]){\r\n        let data = {\r\n            gradeLevel : gradeLevel,\r\n            studentWeekGradeViewModelList : studentWeekGrades\r\n        }\r\n\r\n\t\treturn this._http.post('/api/student/savestudentweekgrades', data);\r\n    }\r\n\r\n    saveStudentTestScores(gradeLevel: string, studentTermScores: StudentTermScore[]) {\r\n        let data = {\r\n            gradeLevel: gradeLevel,\r\n            studentTermScoreViewModelList: studentTermScores\r\n        }\r\n        return this._http.post('/api/student/savestudenttermscores', data);\r\n    }\r\n}","﻿import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { Teacher } from '../model/Teacher';\r\nimport { StudentWeekGrade } from '../model/StudentWeekGrade';\r\nimport { StudentTermScoreResult } from '../model/StudentTermScore';\r\n\r\n\r\n@Injectable()\r\nexport class TeacherService {\r\n    constructor(private _http:HttpClient) { }\r\n\r\n    getAssignedTeacherByGradeAndWeek(grade : string, weekId : number){\r\n        return this._http.get<Teacher[]>('/api/Teacher/assignment/' + grade + '/' + weekId);\r\n    }\r\n\r\n    getAssignedTeacherByWeek(weekId: number) {\r\n        return this._http.get<Teacher[]>('/api/Teacher/assignmentByWeekId/' + weekId);\r\n    }\r\n\r\n    getWeekGrades(teacherId: number, gradeLevel : string, weekId: number) {\r\n        return this._http.get<StudentWeekGrade[]>('/api/Teacher/assignmentById/' + teacherId + '/' + gradeLevel + '/studentgrades/' + weekId);\r\n    }\r\n\r\n    //getL2WeekGrades(teacherId : number, weekId : number){\r\n    //    return this._http.get<StudentWeekGrade[]>('/api/Teacher/assignmentById/' + teacherId + '/studentgrades/' + weekId);\r\n    //}\r\n\r\n    //getL3WeekGrades(teacherId: number, weekId: number) {\r\n    //    return this._http.get<StudentWeekGrade[]>('/api/Teacher/assignmentById/' + teacherId + '/studentgrades/' + weekId);\r\n    //}\r\n\r\n    getStudentTermScores(teacherId: number, gradeLevel : string, termNo: number, weekId: number) {\r\n        return this._http.get<StudentTermScoreResult>('/api/Teacher/assignmentById/' + teacherId + '/' + gradeLevel + '/studentscores/' + termNo + '/' + weekId);\r\n    }\r\n}"],"sourceRoot":""}